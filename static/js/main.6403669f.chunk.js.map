{"version":3,"sources":["api.js","Components/Book.js","Components/Section.js","Components/Table.js","Components/List.js","Screens/Home.js","Screens/Books.js","Components/AuthG.js","Components/Comment.js","Screens/Profile.js","Components/Reducer/reducer.js","Components/Modal.js","Screens/BookDetail.js","Screens/BooklistDetail.js","Screens/Shelf.js","Screens/UserShelf.js","Screens/EditProfile.js","Components/Loader.js","Screens/AddBook.js","Screens/AddBookList.js","Components/Style/InputText.js","Components/Style/Sign.js","Screens/Login.js","Screens/SignUp.js","Screens/AddGoogleUserInfo.js","Screens/Search.js","Components/Header/LoginBtn.js","Components/WindowSize.js","Components/SearchBar.js","Components/Header/Header.js","Components/FloatBtnActivate.js","Components/Header/index.js","Components/Wrapper.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","searchApi","keyword","get","bookApi","bookId","booklistId","post","title","display","book","id","userApi","userInfo","headers","AuthApi","getAuthHeader","patch","logData","logId","booklistApi","booklist","email","params","delete","commentApi","data","getToken","JSON","parse","localStorage","getItem","setToken","token","setItem","stringify","clearToken","signOut","removeItem","undefined","goToHome","Authorization","checkAuth","success","err","name","alert","checkLogin","googleAuth","a","catch","response","isLogin","user","googleUser","googleId","Rt","Au","window","location","href","Container","styled","div","Check","ImageContainer","Image","props","bgUrl","BookDesc","span","Box","FieldSet","form","input","button","fieldset","Book","bookItem","clickBook","recordBook","addBook","totalNum","profile","difficutlyUUID","uuidv4","timeUUID","useState","setTime","setDifficulty","step","setStep","handleTime","e","value","target","complete","valueS","parseInt","time","handledifficulty","difficulty","String","image","replace","onClick","selected","className","author","publisher","type","onChange","htmlFor","Title","Section","children","Grid","Table","BookListHeader","DetailView","DeleteBtn","Divider","BookListUl","ul","BookListLi","li","BookListEmptyLi","BookImage","src","BookListDesc","List","clickBooklist","deleteBL","clickUser","score","setScore","clickEvent","_id","progress","logger","books","map","Scores","doneReading","length","empty","i","push","key","useEffect","nickname","item","index","alt","userBL","Home","setBook","setBooklist","booklistDetail","history","userBooklist","useHistory","showBook","console","log","bookDetail","isbn","showAllBooklist","BooklistResult","dummyFuntion","userId","msg","to","dotenv","config","process","GOOGLE_CLIENT_ID","GoogleAuthContext","React","createContext","useGoogleAuth","useContext","useIsValid","isValid","Centered","CenteredContent","GoogleAuthProvider","useGoogleLogin","clientId","getUserAuth","Provider","color","height","width","Comment","comment","deleteComment","Date","createdAt","toString","description","uuid","Profile","setUser","setComment","wishList","setWishList","readList","setReadList","wishCount","setWishCount","readCount","setReadCount","valid","getUser","authorized","userCommentResult","wishData","readData","totalRead","totalWish","dummyFunction","Head","Spacer","style","SLink","Dividers","Wrapper","Link","initialState","comments","reducer","state","action","payload","commentText","filter","Modal","clickBtn","click","clicked","ModalTemplate","CloseBtn","BookDetail","pathname","match","useReducer","dispatch","setCommentText","allComment","setAllComment","setClick","readClick","setReadClick","wish","setWish","setDoneReading","setReadLogger","wishNum","setWishNum","readNum","setReadNum","averageTime","setAverageTime","averageDifficulty","setAverageDifficulty","isTokenExist","saveComment","COMMENT_DATA","commentResult","getUserBooklist","booklists","getReadLogger","logResult","Results","wishNumber","readNumber","maxTime","maxDifficulty","deleteComments","commentId","deleteNow","clickAddBook","clickReadBook","clickWishlist","prev","clickDoneReading","preventDefault","cancelReading","LeftContainer","RightContainer","Item","category","ButtonTemplate","AddBookBtn","ContentContainer","CommentCotainer","CommentForm","onSubmit","ComentTitle","CommentSection","placeholder","CommentSubmit","CommentTitle","CommentList","defaultChecked","textarea","ReadForm","ReadButton","BooklistDetail","showBooklist","Shelf","AddBook","UserShelf","NEW_BL","showBookList","EditProfile","setName","changed","setChanged","handleSubmit","Header","Form","Input","role","aria-label","loading","setClickedBook","finalBook","setFinalBook","term","setTerm","setPlaceholder","bookResults","newBook","reset","pickBook","newBookData","selectedBook","x","completeBook","Loader","BookNum","Add","AddBookForm","Template","Search","NextBtn","AddBookList","next","setNext","setTitle","setDescription","bookCollection","setBookCollection","clickedBook","bookResult","leftOne","BookId","Final_Booklist","InputText","SignButton","Login","signIn","useForm","register","googleLogIn","profileObj","id_token","doc","userResult","gender","newbie","ref","Gender","SignUp","required","AddGoogleUserInfo","LoginInput","ButtonSection","Button","setBooks","bookList","setBookList","query","queryString","search","showResult","UserLink","LoginBtn","isSignedIn","isClient","getSize","innerWidth","innerHeight","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener","InputImage","Overlay","SearchBar","text","submitSearch","searchText","setSearchText","visible","setVisible","size","useWindowSize","inputTextRef","createRef","clickVisible","_handleChange","_handleKeyPress","current","focus","bind","onKeyPress","withRouter","menuHover","setMenuHover","subMenuHover","setSubMenuHover","icon","getVisible","scrollY","handleScroll","useFloatBtnActive","searchBook","pathCheck","HeaderBanner","BannerLink","HeaderUser","UserMenuUl","UserMenuLi","HeaderLogo","LogoLink","Logo","HeaderMenu","onMouseEnter","onMouseLeave","SubMenuUl","SubMenuLi","SubLink","SSubLink","path","mdiBookPlus","MenuLink","mdiHome","MenuText","mdiBookOutline","mdiBookshelf","mdiAccount","header","img","exact","component","Books","paht","from","globalStyles","createGlobalStyle","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6403669f.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://floating-earth-10094.herokuapp.com/\"\r\n});\r\n\r\nexport const searchApi = {\r\n  searchBook: keyword => api.get(`search/?keyword=${keyword}`)\r\n};\r\n\r\n//Book API\r\nexport const bookApi = {\r\n  addToBooklist: (bookId, booklistId) =>\r\n    api.post(`books/addbook-to-booklist/${bookId}/${booklistId}`),\r\n  getBook: (title, display) => api.get(`/books/${title}/${display}`),\r\n  addBook: book => api.post(`/books/upload`, book),\r\n  getAllBook: () => api.get(`/books/`),\r\n  getBookDetail: id => api.get(`/books/${id}`),\r\n  getBookWish: id => api.get(`/books/wish/user/${id}`)\r\n};\r\n\r\n//User API\r\nexport const userApi = {\r\n  ssoGLogin: userInfo => api.post(`/users/googleSignIn`, userInfo),\r\n  ssoGdetail: userInfo => api.post(`/users/googleDetail`, userInfo),\r\n  getUser: () =>\r\n    api.get(`/users`, {\r\n      headers: AuthApi.getAuthHeader()\r\n    }),\r\n  updateUser: userInfo => api.patch(`/users/update`, userInfo),\r\n  wtbSignUp: userInfo => api.post(`/users/signup`, userInfo),\r\n  wtbSignIn: userInfo => api.post(`/users/signin`, userInfo),\r\n  deleteUser: id => api.delete(`users/delete/${id}`),\r\n  handleWish: logData => api.post(`users/wishlist`, logData),\r\n  handleRead: logData => api.post(`users/doneRead`, logData),\r\n  getReadLogger: logId => api.post(`users/readLogger`, logId),\r\n  getUserMyPage: id => api.get(`users/getUserMyPage/${id}`)\r\n};\r\n\r\nexport const booklistApi = {\r\n  serachBook: title => api.get(`/booklists/${title}`),\r\n  uploadBookList: booklist => api.post(`/booklists/upload`, booklist),\r\n  getBookList: email =>\r\n    api.get(`/booklists`, {\r\n      params: { email: email },\r\n      headers: AuthApi.getAuthHeader()\r\n    }),\r\n  getOneBookList: id => api.get(`/booklists/item/${id}`),\r\n  deleteBookList: (id, email) =>\r\n    api.delete(`/booklists/delete`, {\r\n      params: {\r\n        id: id,\r\n        email: email\r\n      }\r\n    }),\r\n  getBooks: id => api.get(`/booklists/detail/${id}`),\r\n  getAllBooklist: () => api.get(`/booklists/getAllBooklist/public`),\r\n  getAllReadLog: logData => api.post(`/booklists/getAllReadLog`, logData)\r\n};\r\n\r\n//Comment API\r\nexport const commentApi = {\r\n  commentBook: data => api.post(\"/books/comment\", data),\r\n  bookComment: id => api.get(`/comments/${id}`),\r\n  deleteComment: (id, bookId) =>\r\n    api.delete(\"/comments/delete\", { params: { id: id, bookId: bookId } })\r\n};\r\n\r\nexport const AuthApi = {\r\n  getToken: () => {\r\n    return JSON.parse(localStorage.getItem(\"wtbUser\"));\r\n  },\r\n  setToken: token => {\r\n    localStorage.setItem(\"wtbUser\", JSON.stringify(token));\r\n  },\r\n  clearToken: signOut => {\r\n    localStorage.removeItem(\"wtbUser\");\r\n    if (signOut !== undefined) signOut();\r\n    AuthApi.goToHome();\r\n  },\r\n  getAuthHeader: () => {\r\n    const token = AuthApi.getToken();\r\n    if (token) {\r\n      return { Authorization: `Bearer ${token}` };\r\n    } else {\r\n      return {};\r\n    }\r\n  },\r\n  checkAuth: data => {\r\n    if (!data.success) {\r\n      if (data.err.name === \"JsonWebTokenError\") {\r\n        alert(\"인증에러\");\r\n        AuthApi.goToHome();\r\n        return false;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return true;\r\n    }\r\n  },\r\n  // 20200305\r\n  checkLogin: async googleAuth => {\r\n    // 1. 토큰이 있을경우\r\n    if (AuthApi.getToken()) {\r\n      // 토큰을 통해 로그인 체크 하기\r\n      const {\r\n        data: { user }\r\n      } = await userApi.getUser().catch(function(err) {\r\n        if (err.response) {\r\n          alert(\"인증정보가 잘못됨...\");\r\n          AuthApi.clearToken(googleAuth.signOut);\r\n          const user = { isLogin: false };\r\n          return user;\r\n        }\r\n      });\r\n\r\n      // 만약 토큰의 유저와 현재 프론트에 로그인되어있는 메일주소와 일치하지 않을경우. 토큰을 삭제시킴.\r\n      if (\r\n        googleAuth.googleUser.googleId !== undefined &&\r\n        user.email !== googleAuth.googleUser.Rt.Au\r\n      ) {\r\n        alert(\"유저 정보가 잘못됨...\");\r\n        const user = { isLogin: false };\r\n        AuthApi.clearToken(googleAuth.signOut);\r\n        return user;\r\n      }\r\n      user.isLogin = true;\r\n      return user;\r\n    } else {\r\n      const user = { isLogin: false };\r\n      return user;\r\n    }\r\n  },\r\n  goToHome: () => {\r\n    if (window !== undefined) {\r\n      window.location.href = \"/\";\r\n    }\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst Book = ({\r\n  bookItem,\r\n  clickBook,\r\n  recordBook,\r\n  addBook,\r\n  totalNum,\r\n  profile\r\n}) => {\r\n  const difficutlyUUID = uuidv4();\r\n  const timeUUID = uuidv4();\r\n\r\n  // const [time, setTime] = useState(bookItem.time);\r\n  // const [difficulty, setDifficulty] = useState(bookItem.difficulty);\r\n  const [time, setTime] = useState(0);\r\n  const [difficulty, setDifficulty] = useState(0);\r\n  const [step, setStep] = useState(0);\r\n\r\n  const clickEvent = () => {\r\n    \r\n    // 선택 안되있던 상태에서 선택 한 경우\r\n    if(!bookItem.selected) {\r\n      setStep(1);\r\n    }\r\n    clickBook(bookItem);\r\n    bookItem.complete = bookItem.selected ? true : false;\r\n    recordBook(bookItem);\r\n  };\r\n\r\n  const handleTime = e => {\r\n    const {\r\n      target: { value }\r\n    } = e;\r\n\r\n    bookItem.complete = value !== \"\" ? true : false;\r\n\r\n    let valueS = parseInt(value);\r\n\r\n    bookItem.time = parseInt(valueS);\r\n    setTime(valueS);\r\n    setStep(3);\r\n    recordBook(bookItem);\r\n  };\r\n\r\n  const handledifficulty = e => {\r\n    const {\r\n      target: { value }\r\n    } = e;\r\n\r\n    bookItem.complete = value !== \"\" ? true : false;\r\n\r\n    let valueS = parseInt(value);\r\n    bookItem.difficulty = valueS;\r\n    setDifficulty(valueS);\r\n    setStep(2);\r\n    recordBook(bookItem);\r\n  };\r\n  return (\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={String(bookItem.image).replace(\"type=m1&\", \"type=m5&\")}\r\n          onClick={() => {\r\n            clickEvent(time, difficulty);\r\n          }}\r\n        >\r\n          {bookItem.selected && <Check>선택 됨</Check>}\r\n        </Image>\r\n        <BookDesc>\r\n          <p className=\"booktitle\">{bookItem.title}</p>\r\n          <p className=\"desc\">\r\n            {bookItem.author} 저 &nbsp; | &nbsp; {bookItem.publisher}\r\n          </p>\r\n        </BookDesc>\r\n        {profile && <span>총 # : {totalNum}</span>}\r\n        {bookItem.selected && addBook && (\r\n          <Box>\r\n            {step === 1 && (\r\n            <FieldSet>\r\n              <legend>Q. 이 책의 난이도는?</legend>\r\n              <ul className=\"difficulty\">\r\n                <li>\r\n                  <input\r\n                    type=\"radio\"\r\n                    value=\"1\"\r\n                    name={difficutlyUUID}\r\n                    id={difficutlyUUID + \"_1\"}\r\n                    onChange={handledifficulty}\r\n                  />\r\n                  <label htmlFor={difficutlyUUID + \"_1\"}>초급</label>\r\n                </li>\r\n                <li>\r\n                  <input\r\n                    type=\"radio\"\r\n                    value=\"2\"\r\n                    name={difficutlyUUID}\r\n                    id={difficutlyUUID + \"_2\"}\r\n                    onChange={handledifficulty}\r\n                  />\r\n                  <label htmlFor={difficutlyUUID + \"_2\"}>중급</label>\r\n                </li>\r\n                <li>\r\n                  <input\r\n                    type=\"radio\"\r\n                    value=\"3\"\r\n                    name={difficutlyUUID}\r\n                    id={difficutlyUUID + \"_3\"}\r\n                    onChange={handledifficulty}\r\n                  />\r\n                  <label htmlFor={difficutlyUUID + \"_3\"}>고급</label>\r\n                </li>\r\n              </ul>\r\n            </FieldSet>\r\n            )}\r\n            {step === 2 && (\r\n            <FieldSet>\r\n              <legend>Q. 이책을 읽는데 소요된 시간은?</legend>\r\n              <ul className=\"time\">\r\n                <li>\r\n                  <input\r\n                    type=\"radio\"\r\n                    value=\"1\"\r\n                    name={timeUUID}\r\n                    id={timeUUID + \"_1\"}\r\n                    onChange={handleTime}\r\n                  />\r\n                  <label htmlFor={timeUUID + \"_1\"}>한주 이 내</label>\r\n                </li>\r\n                <li>\r\n                  <input\r\n                    type=\"radio\"\r\n                    value=\"2\"\r\n                    name={timeUUID}\r\n                    id={timeUUID + \"_2\"}\r\n                    onChange={handleTime}\r\n                  />\r\n                  <label htmlFor={timeUUID + \"_2\"}>한달 이 내</label>\r\n                </li>\r\n                <li>\r\n                  <input\r\n                    type=\"radio\"\r\n                    value=\"3\"\r\n                    name={timeUUID}\r\n                    id={timeUUID + \"_3\"}\r\n                    onChange={handleTime}\r\n                  />\r\n                  <label htmlFor={timeUUID + \"_3\"}>한달 이상</label>\r\n                </li>\r\n              </ul>\r\n            </FieldSet>\r\n            )}\r\n            {/* <ReadInput\r\n              type=\"number\"\r\n              placeholder=\"총 읽은 시간\"\r\n              name=\"time\"\r\n              onChange={handleTime}\r\n              value={time}\r\n              required\r\n            /> */}\r\n          </Box>\r\n        )}\r\n      </ImageContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Check = styled.div`\r\n  position: absolute;\r\n  background: rgba(44, 62, 80, 0.5);\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\n// const Image = styled.div`\r\n//   background-image: url(${props => props.bgUrl});\r\n//   height: 180px;\r\n//   background-size: cover;\r\n//   border-radius: 4px;\r\n//   background-position: center center;\r\n//   transition: opacity 0.2s linear;\r\n// `;\r\n\r\n// const ImageContainer = styled.div`\r\n//   margin-bottom: 5px;\r\n//   position: relative;\r\n\r\n//   border: 1px solid black;\r\n//   border-radius: 4px;\r\n\r\n// &:hover {\r\n//   ${Image} {\r\n//     opacity: 0.8;\r\n//     box-shadow: -2px -2px 5px 1px rgba(0, 0, 0, 1),\r\n//       2px 2px 5px 1px rgba(0, 0, 0, 1);\r\n//   }\r\n// }\r\n// `;\r\n\r\nconst ImageContainer = styled.div`\r\n  display: block;\r\n  box-sizing: border-box;\r\n  margin: 0 5px;\r\n  width: 188px;\r\n  position: relative;\r\n  padding-top: 250px;\r\n  float: left;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  width: 168px;\r\n  height: 240px;\r\n  background: url(${props => props.bgUrl}) no-repeat top;\r\n  background-size: cover;\r\n  //border: 1px solid black;\r\n  border-radius: 0px;\r\n  &:hover {\r\n    opacity: 0.8;\r\n    box-shadow: -2px -2px 5px 1px rgba(0, 0, 0, 1),\r\n      2px 2px 5px 1px rgba(0, 0, 0, 1);\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst BookDesc = styled.div`\r\n  width: 188px;\r\n  padding: 10px 15px;\r\n  min-height: 79px;\r\n\r\n  > .booktitle {\r\n    display: -webkit-box;\r\n    min-height: 17px;\r\n    max-height: 34px;\r\n    line-height: 17px;\r\n    word-break: break-all;\r\n    overflow: hidden;\r\n    font-size: 13px;\r\n    color: #333;\r\n    font-weight: 600;\r\n    -webkit-line-clamp: 2;\r\n    -webkit-box-orient: vertical;\r\n  }\r\n\r\n  > .desc {\r\n    margin-top: 10px;\r\n    display: block;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    line-height: 15px;\r\n    min-height: 15px;\r\n    max-height: 15px;\r\n    font-size: 11px;\r\n    color: #777;\r\n    font-weight: 500;\r\n  }\r\n`;\r\n\r\nconst Box = styled.div`\r\n  position:absolute;\r\n  left:15px;\r\n  top:40px;\r\n  width:156px;\r\n`;\r\n\r\nconst ReadForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ReadInput = styled.input`\r\n  all: unset;\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n  text-align: center;\r\n\r\n  border-bottom: 1px rgba(0, 0, 0, 0.3) solid;\r\n`;\r\n\r\nconst ReadButton = styled.button`\r\n  border: 1px solid black;\r\n  border-radius: 5px;\r\n  padding: 5px;\r\n  text-align: center;\r\n`;\r\n\r\nconst FieldSet = styled.fieldset`\r\n  text-align:center;\r\n  legend {\r\n    display:inline-block;\r\n    padding: 5px 10px;\r\n    background:RGBA(0, 0, 0, 0.7);\r\n    color:#FFF;\r\n    font-weight:600;\r\n    font-size: 15px;\r\n    border-radius:10px;\r\n    margin-bottom:10px;\r\n  }\r\n  ul {\r\n    li {\r\n      margin-bottom:5px;\r\n      label {\r\n        display:inline-block;\r\n        padding: 5px 10px;\r\n        background:RGBA(0, 0, 0, 0.7);\r\n        color:#FFF;\r\n        font-weight:600;\r\n        font-size:14px;\r\n        border-radius:10px;\r\n        cursor:pointer;\r\n        &:hover {\r\n          background: RGBA(255,30,60,0.9);\r\n        }\r\n      }\r\n      input[type=radio] {\r\n        visibility:hidden;\r\n        position:absolute;\r\n      }\r\n      input[type=radio]:checked ~ label{\r\n        background: RGBA(226, 1, 54, 0.7);\r\n        &:hover {\r\n          background: RGBA(255,30,60,0.9);\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Book;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    {/* <Grid>{children}</Grid> */}\r\n    {children}\r\n  </Container>\r\n);\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n  &:after{\r\n    content:\"\"; \r\n    display:block;\r\n    clear:both;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\n// const Grid = styled.div`\r\n//   margin-top: 25px;\r\n//   display: grid;\r\n//   grid-template-columns: repeat(auto-fill, 125px);\r\n//   grid-gap: 25px;\r\n// `;\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Table = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default Table;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { booklistApi } from \"../api\";\r\n\r\nconst List = ({\r\n  booklist,\r\n  clickBooklist,\r\n  deleteBL,\r\n  user,\r\n  userInfo,\r\n  clickUser\r\n}) => {\r\n  const [score, setScore] = useState({});\r\n  const clickEvent = e => {\r\n    clickBooklist(booklist._id);\r\n  };\r\n\r\n  const navigateUser = e => {\r\n    clickUser(userInfo.nickname);\r\n  };\r\n\r\n  const progress = async () => {\r\n    const logger = booklist.books.map(book => {\r\n      const singleLogger = {\r\n        book: book._id,\r\n        user: user\r\n      };\r\n      return singleLogger;\r\n    });\r\n\r\n    const {\r\n      data: { Scores }\r\n    } = await booklistApi.getAllReadLog(logger);\r\n\r\n    Scores.progress = Scores.doneReading / booklist.books.length;\r\n\r\n    setScore(Scores);\r\n  };\r\n\r\n  const clickDelete = e => {\r\n    deleteBL(booklist._id);\r\n  };\r\n\r\n  const empty = [];\r\n\r\n  // for (const [index, value] of elements.entries()) {\r\n  //   items.push(<li key={index}>{value}</li>)\r\n  // }\r\n\r\n  if (booklist.books.length < 4) {\r\n    for (var i = booklist.books.length; i < 4; i++) {\r\n      empty.push(<BookListEmptyLi key={i}></BookListEmptyLi>);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (user !== undefined) progress();\r\n  }, []);\r\n  return (\r\n    <Container>\r\n      <BookListHeader>\r\n        <Title onClick={clickEvent}>책장 제목 : {booklist.title} |</Title>\r\n        {userInfo && (\r\n          <Title onClick={navigateUser}> 주인장 : {userInfo.nickname}</Title>\r\n        )}\r\n        {user && (\r\n          <Title>\r\n            전체 책 # : {booklist.books.length} | 일읅 책 # :{\" \"}\r\n            {score.doneReading} | 진행률 :{score.progress}\r\n          </Title>\r\n        )}\r\n\r\n        <DetailView onClick={clickEvent}>상세보기 ></DetailView>\r\n      </BookListHeader>\r\n      <Divider></Divider>\r\n      <BookListUl>\r\n        {booklist.books.map((item, index) => (\r\n          <BookListLi key={index}>\r\n            <BookImage\r\n              src={String(item.image).replace(\"type=m1&\", \"type=m5&\")}\r\n              alt={item.image}\r\n            ></BookImage>\r\n            <BookListDesc>\r\n              <p className=\"booktitle\">{item.title}</p>\r\n              <p className=\"desc\">\r\n                {item.author} 저 &nbsp; | &nbsp; {item.publisher}\r\n              </p>\r\n            </BookListDesc>\r\n          </BookListLi>\r\n        ))}\r\n        {empty}\r\n      </BookListUl>\r\n      {booklist.userBL\r\n        ? user && <DeleteBtn onClick={clickDelete}>삭제</DeleteBtn>\r\n        : null}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  font-size: 1rem;\r\n  width: 100%;\r\n  margin-bottom: 30px;\r\n  position: relative;\r\n`;\r\n\r\nconst BookListHeader = styled.div``;\r\n\r\nconst Title = styled.span`\r\n  margin-left: 5px;\r\n  color: #333;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  letter-spacing: 0.2;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst DetailView = styled.span`\r\n  float: right;\r\n  font-size: 12px;\r\n  margin-top: 8px;\r\n  margin-right: 5px;\r\n  font-weight: 600;\r\n  color: #777;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #333;\r\n  }\r\n`;\r\nconst DeleteBtn = styled.button`\r\n  position: absolute;\r\n  right: 0px;\r\n  bottom: 0px;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  height: 1px;\r\n  width: 100%;\r\n  background: #ccc;\r\n  margin: 8px 0 15px;\r\n`;\r\n\r\nconst BookListUl = styled.ul`\r\n  display: flex;\r\n  width: 100%;\r\n  overflow: hidden;\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    overflow-x: auto;\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n  }\r\n`;\r\n\r\nconst BookListLi = styled.li`\r\n  display: block;\r\n  box-sizing: border-box;\r\n  margin-right: 15px;\r\n  width: 188px;\r\n  position: relative;\r\n  padding-top: 250px;\r\n`;\r\n\r\nconst BookListEmptyLi = styled.li`\r\n  display: block;\r\n  box-sizing: border-box;\r\n  margin-right: 15px;\r\n  width: 188px;\r\n  position: relative;\r\n  height: 329px;\r\n  &:after {\r\n    content: \"+\";\r\n    position: absolute;\r\n    font-size: 100px;\r\n    line-height: 301px;\r\n    text-align: center;\r\n    left: 10px;\r\n    top: 10px;\r\n    width: 160px;\r\n    height: 301px;\r\n    color: #ccc;\r\n    border-radius: 20px;\r\n    border: 4px dotted #ccc;\r\n  }\r\n  &:before {\r\n    content: \"\";\r\n    width: 188px;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst BookImage = styled.div`\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  width: 168px;\r\n  height: 240px;\r\n  background: url(${props => props.src}) no-repeat top;\r\n  background-size: cover;\r\n`;\r\n\r\nconst BookListDesc = styled.div`\r\n  width: 188px;\r\n  padding: 10px 15px;\r\n\r\n  > .booktitle {\r\n    display: -webkit-box;\r\n    min-height: 17px;\r\n    max-height: 34px;\r\n    line-height: 17px;\r\n    word-break: break-all;\r\n    overflow: hidden;\r\n    font-size: 13px;\r\n    color: #333;\r\n    font-weight: 600;\r\n    -webkit-line-clamp: 2;\r\n    -webkit-box-orient: vertical;\r\n  }\r\n\r\n  > .desc {\r\n    margin-top: 10px;\r\n    display: block;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    line-height: 15px;\r\n    min-height: 15px;\r\n    max-height: 15px;\r\n    font-size: 11px;\r\n    color: #777;\r\n    font-weight: 500;\r\n  }\r\n`;\r\n\r\nexport default List;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nimport { bookApi } from \"../api\";\r\nimport { booklistApi } from \"../api\";\r\nimport Book from \"../Components/Book\";\r\nimport Section from \"../Components/Section\";\r\nimport Table from \"../Components/Table\";\r\nimport List from \"../Components/List\";\r\n\r\nexport default function Home() {\r\n  const [book, setBook] = useState([]);\r\n  const [booklist, setBooklist] = useState([]);\r\n  const booklistDetail = async item => {\r\n    history.push(`/booklist/${item}`);\r\n  };\r\n\r\n  const userBooklist = async nickname => {\r\n    history.push(`/${nickname}/shelf`);\r\n  };\r\n\r\n  //Redirecting via history neither Link or Redirect\r\n  const history = useHistory();\r\n\r\n  const showBook = async () => {\r\n    try {\r\n      const {\r\n        data: { books }\r\n      } = await bookApi.getAllBook();\r\n      setBook(books);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const bookDetail = async item => {\r\n    history.push(`/book/${item.isbn}`);\r\n  };\r\n\r\n  const showAllBooklist = async () => {\r\n    try {\r\n      const {\r\n        data: { BooklistResult }\r\n      } = await booklistApi.getAllBooklist();\r\n\r\n      setBooklist(BooklistResult);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const dummyFuntion = () => {};\r\n  useEffect(() => {\r\n    showAllBooklist();\r\n    showBook();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>HOME | WTB</title>\r\n      </Helmet>\r\n      <Section title=\"새로 등록된 책\">\r\n        {book ? (\r\n          book.map((bookItem, index) => {\r\n            return (\r\n              index < 8 && (\r\n                <Book\r\n                  key={bookItem.isbn}\r\n                  bookItem={bookItem}\r\n                  clickBook={bookDetail}\r\n                  recordBook={dummyFuntion}\r\n                />\r\n              )\r\n            );\r\n          })\r\n        ) : (\r\n          <h1>표시 할 책이 없습니다.</h1>\r\n        )}\r\n      </Section>\r\n      <Section title=\"다른 유저들은 어떤책을 읽을까?\">\r\n        <Table>\r\n          {booklist ? (\r\n            booklist.map(item => (\r\n              <List\r\n                key={item._id}\r\n                booklist={item}\r\n                clickBooklist={booklistDetail}\r\n                userInfo={item.userId}\r\n                clickUser={userBooklist}\r\n              />\r\n            ))\r\n          ) : (\r\n            <h1>책장이 비어져있습니다.</h1>\r\n          )}\r\n        </Table>\r\n      </Section>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div``;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { bookApi } from \"../api\";\r\nimport Book from \"../Components/Book\";\r\nimport Section from \"../Components/Section\";\r\n\r\nexport default function Home() {\r\n  const [book, setBook] = useState([]);\r\n\r\n  //Redirecting via history neither Link or Redirect\r\n  const history = useHistory();\r\n\r\n  const showBook = async () => {\r\n    try {\r\n      const {\r\n        data: { books }\r\n      } = await bookApi.getAllBook().catch(function(err) {\r\n        if (err.response) {\r\n          if (err.response.msg !== `success`) {\r\n            return <Redirect to=\"/\" />;\r\n          }\r\n        }\r\n      });\r\n      setBook(books);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const bookDetail = async item => {\r\n    history.push(`/book/${item.isbn}`);\r\n  };\r\n  const dummyFuntion = () => {};\r\n  useEffect(() => {\r\n    showBook();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Section>\r\n        {book ? (\r\n          book.map(bookItem => (\r\n            <Book\r\n              key={bookItem.isbn}\r\n              bookItem={bookItem}\r\n              clickBook={bookDetail}\r\n              recordBook={dummyFuntion}\r\n            />\r\n          ))\r\n        ) : (\r\n          <h1>표시 할 책이 없습니다.</h1>\r\n        )}\r\n      </Section>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div``;\r\n","import React, { useContext } from \"react\";\r\nimport { useGoogleLogin } from \"react-use-googlelogin\";\r\nimport { AuthApi } from \"../api\";\r\nimport styled from \"styled-components\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport dotenv from \"dotenv\";\r\n\r\ndotenv.config();\r\n\r\nconst clientID =\r\n  \"563473472310-ih69dhvqsbl37b20ic312v96nqlvfjr9.apps.googleusercontent.com\";\r\n\r\n// const clientID = process.env.GOOGLE_CLIENT_ID;\r\n\r\nconsole.log(process.env.GOOGLE_CLIENT_ID);\r\nconst GoogleAuthContext = React.createContext(); // Not necessary, but recommended.\r\n\r\nconst GoogleAuthProvider = ({ children }) => {\r\n  const googleAuth = useGoogleLogin({\r\n    clientId: clientID\r\n  });\r\n\r\n  // 유저 정보를 받아오는 부분. (토큰이 있다면)\r\n  const getUserAuth = async googleAuth => {\r\n    if (googleAuth.googleUser !== null) {\r\n      return await AuthApi.checkLogin(googleAuth);\r\n    }\r\n  };\r\n\r\n  if (googleAuth.googleUser !== null) {\r\n    return (\r\n      <GoogleAuthContext.Provider value={{ googleAuth, isValid: getUserAuth }}>\r\n        {/* The rest of your app */}\r\n        {children}\r\n      </GoogleAuthContext.Provider>\r\n    );\r\n  } else {\r\n    return (\r\n      <Centered>\r\n        <CenteredContent>\r\n          <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={100} width={100} />\r\n        </CenteredContent>\r\n      </Centered>\r\n    );\r\n  }\r\n};\r\n\r\nconst useGoogleAuth = () => {\r\n  const { googleAuth } = useContext(GoogleAuthContext);\r\n  return googleAuth;\r\n};\r\n\r\nconst useIsValid = () => {\r\n  const { isValid } = useContext(GoogleAuthContext);\r\n  return isValid;\r\n};\r\n\r\nconst Centered = styled.div`\r\n  position: fixed;\r\n  top: 0px;\r\n  left: 0px;\r\n  bottom: 0px;\r\n  right: 0px;\r\n  display: flex;\r\n  align-items: center;\r\n  overflow: auto;\r\n`;\r\n\r\nconst CenteredContent = styled.div`\r\n  margin: auto;\r\n  max-height: 100%;\r\n`;\r\n\r\nexport default GoogleAuthProvider;\r\n\r\nexport { GoogleAuthContext, useGoogleAuth, useIsValid };\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useGoogleAuth } from \"../Components/AuthG\";\r\n\r\nconst Comment = ({ comment, user, deleteComment, book }) => {\r\n  const { googleUser } = useGoogleAuth();\r\n\r\n  const clickDelete = e => {\r\n    deleteComment(comment.uuid);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {book !== undefined ? <span>{book.title}</span> : null}\r\n      <h5>작성 시간 : {new Date(comment.createdAt).toString()}</h5>\r\n\r\n      <h5>작성자 이름: {user.nickname}</h5>\r\n      <h5>댓글 내용 : {comment.description}</h5>\r\n      {googleUser.googleId === user.googleId ? (\r\n        <button onClick={clickDelete}>삭제</button>\r\n      ) : null}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  color: black;\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport default Comment;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Comment from \"../Components/Comment\";\r\nimport Book from \"../Components/Book\";\r\nimport Section from \"../Components/Section\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { userApi } from \"../api\";\r\n\r\nimport { useGoogleAuth, useIsValid } from \"../Components/AuthG\";\r\n\r\nexport default function Profile() {\r\n  const history = useHistory();\r\n\r\n  const [user, setUser] = useState({});\r\n  const [comment, setComment] = useState([]);\r\n  const [wishList, setWishList] = useState([]);\r\n  const [readList, setReadList] = useState([]);\r\n  const [wishCount, setWishCount] = useState([]);\r\n  const [readCount, setReadCount] = useState([]);\r\n\r\n  const googleAuth = useGoogleAuth();\r\n  const { signOut } = useGoogleAuth();\r\n  const valid = useIsValid();\r\n\r\n  //Attempt to assing a new uuid value as a unique key to each of the book in the list\r\n  /* \r\n  const assignUniqueKey = booklist => {\r\n    return booklist.map(item => (item.key = uuidv4()));\r\n  };\r\n  */\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      const authorized = await valid(googleAuth);\r\n      setUser(authorized);\r\n\r\n      const {\r\n        data: { userCommentResult, wishData, readData, totalRead, totalWish }\r\n      } = await userApi.getUserMyPage(authorized._id);\r\n\r\n      setComment(userCommentResult);\r\n      setWishList(wishData);\r\n      setReadList(readData);\r\n\r\n      setWishCount(totalWish);\r\n      setReadCount(totalRead);\r\n    } catch (err) {\r\n      history.push(`/`);\r\n    }\r\n  };\r\n\r\n  //Delete Profile\r\n  /* \r\n  const deleteUser = async () => {\r\n    try {\r\n      await userApi.deleteUser(user._id);\r\n      await AuthApi.clearToken(signOut);\r\n      history.push(\"/\");\r\n    } catch (err) {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  */\r\n\r\n  const bookDetail = async item => {\r\n    history.push(`/book/${item.isbn}`);\r\n  };\r\n\r\n  const dummyFunction = async () => {};\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>My Page | WTB</title>\r\n      </Helmet>\r\n      <Head>\r\n        <Title>마이 페이지</Title>\r\n        <Spacer style={{ height: \"100px\" }} />\r\n        <Wrapper>\r\n          <span>이름</span>\r\n          <Spacer />\r\n          <h3>{user.nickname}</h3>\r\n          <SLink to={`/${user.email}/editprofile`}>edit</SLink>\r\n          <Spacer />\r\n          <span>이메일</span>\r\n          <Spacer />\r\n          <h3>{user.email}</h3>\r\n          <Spacer />\r\n          {/* <Button onClick={deleteUser}>Delete Profile</Button> */}\r\n          <Spacer />\r\n          <Dividers />\r\n          {comment.length >= 1 ? (\r\n            comment.map(comment => (\r\n              <Comment\r\n                key={comment._id}\r\n                comment={comment}\r\n                user={comment.user}\r\n                book={comment.book}\r\n              />\r\n            ))\r\n          ) : (\r\n            <h1>작성 된 댓글이 없습니다.</h1>\r\n          )}\r\n\r\n          <Dividers />\r\n          <h1>좋아요 한 책</h1>\r\n          <Section>\r\n            {wishList ? (\r\n              wishList.map((item, index) => (\r\n                <Book\r\n                  key={item.book.isbn}\r\n                  bookItem={item.book}\r\n                  clickBook={bookDetail}\r\n                  recordBook={dummyFunction}\r\n                  totalNum={wishCount[index]}\r\n                  profile={true}\r\n                />\r\n              ))\r\n            ) : (\r\n              <h1>해당 되는 책이 없습니다.</h1>\r\n            )}\r\n          </Section>\r\n          <Dividers />\r\n          <h1>읽은 책</h1>\r\n          <Section>\r\n            {readList ? (\r\n              readList.map((item, index) => (\r\n                <Book\r\n                  key={item.book.isbn}\r\n                  bookItem={item.book}\r\n                  clickBook={bookDetail}\r\n                  recordBook={dummyFunction}\r\n                  totalNum={readCount[index]}\r\n                  profile={true}\r\n                />\r\n              ))\r\n            ) : (\r\n              <h1>해당 되는 책이 없습니다.</h1>\r\n            )}\r\n          </Section>\r\n\r\n          <Dividers />\r\n        </Wrapper>\r\n      </Head>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div``;\r\n\r\nconst Head = styled.div`\r\n  margin: 20px 20px;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  font-weight: 600;\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst Spacer = styled.div`\r\n  height: 15px;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  font-weight: 500;\r\n  color: #8189a9;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  margin-top: 10px;\r\n  color: #4a6ee0;\r\n`;\r\n\r\nconst Dividers = styled.div`\r\n  width: 100%;\r\n  border: 0.8px solid black;\r\n  margin-bottom: 5px;\r\n  margin-top: 5px;\r\n`;\r\n","export const initialState = {\r\n  comments: []\r\n};\r\n\r\nexport const ADD = \"add\";\r\nexport const DEL = \"del\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ADD:\r\n      return {\r\n        ...state,\r\n        comments: [\r\n          ...state.comments,\r\n          {\r\n            description: action.payload.commentText,\r\n            createdAt: action.payload.createdAt,\r\n            uuid: action.payload.id\r\n          }\r\n        ]\r\n      };\r\n    case DEL:\r\n      return {\r\n        ...state,\r\n        comments: state.comments.filter(\r\n          comment => comment.uuid !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Modal = ({ clickBtn, click, children }) => (\r\n  <Container clicked={click}>\r\n    <ModalTemplate>\r\n      <CloseBtn onClick={clickBtn}>❌</CloseBtn>\r\n      {children}\r\n    </ModalTemplate>\r\n  </Container>\r\n);\r\n\r\nexport default Modal;\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  display: ${props => (props.clicked ? \"block\" : \"none\")};\r\n  width: 360px;\r\n  height: 360px;\r\n  border: 1px solid black;\r\n  margin-left: calc(50% - 180px);\r\n  margin-top: calc(50% - 180px);\r\n  background-color: rgba(255, 255, 255, 1);\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n`;\r\n\r\nconst ModalTemplate = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst CloseBtn = styled.span`\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 5px;\r\n  cursor: pointer;\r\n`;\r\n","import React, { useEffect, useState, useReducer } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { useGoogleAuth, useIsValid } from \"../Components/AuthG\";\r\nimport { bookApi, booklistApi, commentApi, AuthApi, userApi } from \"../api\";\r\n\r\nimport reducer, { initialState, ADD, DEL } from \"../Components/Reducer/reducer\";\r\nimport Comment from \"../Components/Comment\";\r\n\r\nimport Modal from \"../Components/Modal\";\r\n\r\nexport default function BookDetail({\r\n  location: { pathname },\r\n  match: {\r\n    params: { id }\r\n  }\r\n}) {\r\n  const [user, setUser] = useState([]);\r\n  const [book, setBook] = useState({});\r\n  const [comment, dispatch] = useReducer(reducer, initialState);\r\n  const [commentText, setCommentText] = useState(\"\");\r\n  const [allComment, setAllComment] = useState([]);\r\n  const [booklist, setBooklist] = useState([]);\r\n\r\n  const [click, setClick] = useState(false);\r\n  const [readClick, setReadClick] = useState(false);\r\n  const [wish, setWish] = useState(false);\r\n  const [doneReading, setDoneReading] = useState(false);\r\n  const [readLogger, setReadLogger] = useState({});\r\n\r\n  const [time, setTime] = useState(1);\r\n  const [difficulty, setDifficulty] = useState(1);\r\n  const [wishNum, setWishNum] = useState(0);\r\n  const [readNum, setReadNum] = useState(0);\r\n\r\n  const [averageTime, setAverageTime] = useState(\"읽지 않음\");\r\n  const [averageDifficulty, setAverageDifficulty] = useState(\"읽지 않음\");\r\n\r\n  const isTokenExist = AuthApi.getToken();\r\n\r\n  const googleAuth = useGoogleAuth();\r\n  const valid = useIsValid();\r\n\r\n  const saveComment = async () => {\r\n    const COMMENT_DATA = {\r\n      user: user._id,\r\n      book: book._id,\r\n      description: commentText,\r\n      uuid: uuidv4()\r\n    };\r\n\r\n    const {\r\n      data: { commentResult, success, msg }\r\n    } = await commentApi.commentBook(COMMENT_DATA);\r\n\r\n    if (success) {\r\n      dispatch({\r\n        type: ADD,\r\n        payload: {\r\n          commentText: commentResult.description,\r\n          id: commentResult.uuid,\r\n          createdAt: commentResult.createdAt\r\n        }\r\n      });\r\n    } else {\r\n      alert(msg);\r\n    }\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n    saveComment();\r\n\r\n    setCommentText(\"\");\r\n  };\r\n\r\n  const onChange = e => {\r\n    const {\r\n      target: { value }\r\n    } = e;\r\n    setCommentText(value);\r\n  };\r\n\r\n  const getUserBooklist = async user => {\r\n    const {\r\n      data: {\r\n        booklist: { booklists }\r\n      }\r\n    } = await booklistApi.getBookList(user.email);\r\n    setBooklist(booklists);\r\n  };\r\n\r\n  const getReadLogger = async (userId, bookId) => {\r\n    const logData = {\r\n      user: userId,\r\n      book: bookId\r\n    };\r\n\r\n    const {\r\n      data: { logResult }\r\n    } = await userApi.getReadLogger(logData);\r\n    if (logResult !== null) {\r\n      setWish(logResult.wish);\r\n      setDoneReading(logResult.doneReading);\r\n    }\r\n    setReadLogger(logResult);\r\n  };\r\n\r\n  const showBook = async user => {\r\n    //get all info about the book.\r\n    try {\r\n      const {\r\n        data: { book: Results }\r\n      } = await bookApi.getBookDetail(id);\r\n\r\n      setBook(Results);\r\n\r\n      /* \r\n      wishNumber : 해당 책이 가지고있는 좋아요 갯수\r\n      readNumber : 해당 책이 읽힌 횟수 \r\n      maxTime : 가장 많이 선택된 읽음 소요 시간\r\n      maxDifficulty : 가장 많이 선택된 난이도 \r\n      averageTime : 시간 소요 전체 분포도 as Object Type\r\n      averageDiffculty : 난이도 전체 분포도 as Object Type\r\n      */\r\n      const {\r\n        data: {\r\n          wishNumber,\r\n          readNumber,\r\n          maxTime,\r\n          maxDifficulty,\r\n          averageTime,\r\n          averageDifficulty\r\n        }\r\n      } = await bookApi.getBookWish(Results._id);\r\n\r\n      setWishNum(wishNumber);\r\n      setReadNum(readNumber);\r\n      setAverageTime(maxTime);\r\n      setAverageDifficulty(maxDifficulty);\r\n\r\n      if (isTokenExist != null) {\r\n        getUserBooklist(user);\r\n        getReadLogger(user._id, Results._id);\r\n      }\r\n\r\n      //get all the comment.\r\n      const {\r\n        data: { commentResult }\r\n      } = await commentApi.bookComment(Results._id);\r\n      setAllComment(commentResult);\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  const deleteComments = async commentId => {\r\n    try {\r\n      const {\r\n        data: { commentResult }\r\n      } = await commentApi.deleteComment(commentId, book._id);\r\n      setAllComment(commentResult);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const deleteNow = async commentId => {\r\n    const {\r\n      data: { commentResult }\r\n    } = await commentApi.deleteComment(commentId, book._id);\r\n    dispatch({ type: DEL, payload: commentId });\r\n  };\r\n\r\n  const clickAddBook = () => {\r\n    setClick(!click);\r\n  };\r\n\r\n  const clickReadBook = () => {\r\n    setReadClick(!readClick);\r\n  };\r\n\r\n  const clickWishlist = async (wish, doneReading) => {\r\n    if (wish) {\r\n      setWishNum(prev => prev - 1);\r\n    } else if (wish === false) {\r\n      setWishNum(prev => prev + 1);\r\n    }\r\n    const logData = {\r\n      user: user._id,\r\n      book: book._id,\r\n      wish: !wish\r\n    };\r\n\r\n    //Need Error Handling in the future.\r\n    if (!doneReading) {\r\n      await userApi.handleWish(logData);\r\n      setWish(!wish);\r\n    }\r\n  };\r\n\r\n  //하아 시바 인풋 핸들링. 꼭 따로 펑셔널하게 만든다. 시부엉 넘나 Redudunt && Inefficient\r\n  const handleTime = e => {\r\n    const {\r\n      target: { value }\r\n    } = e;\r\n    let valueS = parseInt(value);\r\n    setTime(valueS);\r\n  };\r\n\r\n  const handledifficulty = e => {\r\n    const {\r\n      target: { value }\r\n    } = e;\r\n    setDifficulty(value);\r\n  };\r\n\r\n  const clickDoneReading = async e => {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n    setReadClick(false);\r\n    if (doneReading === false) {\r\n      setReadNum(prev => prev + 1);\r\n    }\r\n    const logData = {\r\n      user: user._id,\r\n      book: book._id,\r\n      difficulty: difficulty,\r\n      time: time,\r\n      doneReading: !doneReading\r\n    };\r\n\r\n    await userApi.handleRead(logData);\r\n    setDoneReading(!doneReading);\r\n  };\r\n\r\n  const cancelReading = async () => {\r\n    const logData = {\r\n      user: user._id,\r\n      book: book._id,\r\n      doneReading: !doneReading\r\n    };\r\n\r\n    await userApi.handleRead(logData);\r\n    setDoneReading(!doneReading);\r\n  };\r\n\r\n  const getUser = async () => {\r\n    const authorized = await valid(googleAuth);\r\n    setUser(authorized);\r\n    showBook(authorized);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <LeftContainer>\r\n          <img\r\n            className=\"bookImage\"\r\n            src={String(book.image).replace(\"type=m1&\", \"\")}\r\n            alt={book.title}\r\n          ></img>\r\n        </LeftContainer>\r\n        <RightContainer>\r\n          <Item>\r\n            <h1>{book.title}</h1>by {book.author}\r\n          </Item>\r\n          <Divider></Divider>\r\n          <Item className=\"description\">{book.description}</Item>\r\n          <Item className=\"author-wrap\">\r\n            <img\r\n              src=\"https://secure.gravatar.com/avatar/f56af396b817f5a028808653642862de?s=50&amp;d=mm&amp;r=g\"\r\n              alt={book.author}\r\n            ></img>\r\n            <span>{book.author}</span>\r\n          </Item>\r\n          <Item>{book.publisher}</Item>\r\n          <Item> 평균 읽은 시간 : {averageTime}</Item>\r\n          <Item> 평균 난이도 : {averageDifficulty}</Item>\r\n          <Item>카테고리 : {book.category}</Item>\r\n          {isTokenExist !== null ? (\r\n            <ButtonTemplate>\r\n              <AddBookBtn onClick={clickAddBook}>책장에 추가</AddBookBtn>\r\n\r\n              <AddBookBtn\r\n                doneReading={doneReading}\r\n                onClick={() => {\r\n                  if (doneReading) {\r\n                    cancelReading();\r\n                    setReadNum(prev => prev - 1);\r\n                  } else {\r\n                    clickReadBook();\r\n                  }\r\n                }}\r\n              >\r\n                읽음 : {readNum}\r\n              </AddBookBtn>\r\n              <AddBookBtn\r\n                wish={wish}\r\n                onClick={() => {\r\n                  clickWishlist(wish);\r\n                }}\r\n              >\r\n                좋아요 # : {wishNum}\r\n              </AddBookBtn>\r\n            </ButtonTemplate>\r\n          ) : null}\r\n        </RightContainer>\r\n        <ContentContainer>\r\n          <CommentCotainer>\r\n            <CommentForm onSubmit={onSubmit}>\r\n              <ComentTitle />\r\n              <CommentSection\r\n                placeholder=\"댓글 입력\"\r\n                value={commentText}\r\n                onChange={onChange}\r\n              />\r\n              <CommentSubmit type=\"submit\">등록</CommentSubmit>\r\n            </CommentForm>\r\n            <Dividers />\r\n            <CommentTitle>댓글</CommentTitle>\r\n            <Dividers />\r\n            <CommentList>\r\n              <h4>추가된 댓글들 </h4>\r\n              {allComment.map(comment => (\r\n                <Comment\r\n                  key={comment._id}\r\n                  comment={comment}\r\n                  user={comment.user}\r\n                  deleteComment={deleteComments}\r\n                />\r\n              ))}\r\n              {comment.comments.map(comment => (\r\n                <Comment\r\n                  key={comment.uuid}\r\n                  comment={comment}\r\n                  user={user}\r\n                  deleteComment={deleteNow}\r\n                />\r\n              ))}\r\n            </CommentList>\r\n          </CommentCotainer>\r\n        </ContentContainer>\r\n      </Container>\r\n      <Modal clickBtn={clickAddBook} click={click}>\r\n        <div>\r\n          {booklist.length >= 1 ? (\r\n            booklist.map(item => (\r\n              <h1\r\n                onClick={async () => {\r\n                  await bookApi.addToBooklist(book._id, item._id);\r\n                  setClick(false);\r\n                }}\r\n                key={item._id}\r\n              >\r\n                {item.title}\r\n              </h1>\r\n            ))\r\n          ) : (\r\n            <span>책묶음이 없습니다.</span>\r\n          )}\r\n        </div>\r\n      </Modal>\r\n      <Modal clickBtn={clickReadBook} click={readClick}>\r\n        <Box>\r\n          <ReadForm onSubmit={clickDoneReading}>\r\n            <FieldSet>\r\n              <legend>난이도를 알려주세요</legend>\r\n              <input\r\n                id=\"1\"\r\n                type=\"radio\"\r\n                value=\"1\"\r\n                name=\"difficulty\"\r\n                defaultChecked\r\n                onChange={handledifficulty}\r\n              />\r\n              <label htmlFor=\"1\">초급</label>\r\n\r\n              <input\r\n                id=\"2\"\r\n                type=\"radio\"\r\n                value=\"2\"\r\n                name=\"difficulty\"\r\n                onChange={handledifficulty}\r\n              />\r\n              <label htmlFor=\"2\">중급</label>\r\n              <input\r\n                id=\"3\"\r\n                type=\"radio\"\r\n                value=\"3\"\r\n                name=\"difficulty\"\r\n                onChange={handledifficulty}\r\n              />\r\n              <label htmlFor=\"3\">고급</label>\r\n            </FieldSet>\r\n            <FieldSet>\r\n              <legend>읽는데 걸리 소요시간</legend>\r\n              <input\r\n                type=\"radio\"\r\n                value=\"1\"\r\n                name=\"time\"\r\n                defaultChecked\r\n                onChange={handleTime}\r\n              />\r\n              <label htmlFor=\"1\">한주 이 내</label>\r\n\r\n              <input type=\"radio\" value=\"2\" name=\"time\" onChange={handleTime} />\r\n              <label htmlFor=\"2\">한달 이 내</label>\r\n              <input type=\"radio\" value=\"3\" name=\"time\" onChange={handleTime} />\r\n              <label htmlFor=\"3\">한달 이상</label>\r\n            </FieldSet>\r\n            <ReadButton>Submit</ReadButton>\r\n          </ReadForm>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nconst ButtonTemplate = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst AddBookBtn = styled.button`\r\n  border: 1px solid black;\r\n  width: 100px;\r\n  height: 50px;\r\n  padding: 5px;\r\n  text-align: center;\r\n  background-color: ${props =>\r\n    props.wish ? \"blue\" : props.doneReading ? \"blue\" : \"white\"};\r\n`;\r\n\r\nconst CloseBtn = styled.span`\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 5px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst AddBookTemplate = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst AddBook = styled.div`\r\n  position: absolute;\r\n  display: ${props => (props.clicked ? \"block\" : \"none\")};\r\n  width: 360px;\r\n  height: 360px;\r\n  border: 1px solid black;\r\n  margin-left: calc(50% - 180px);\r\n  margin-top: calc(50% - 180px);\r\n  background-color: rgba(255, 255, 255, 1);\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n`;\r\n\r\nconst Container = styled.div``;\r\n\r\nconst LeftContainer = styled.div`\r\n  @media only screen and (max-width: 767px) {\r\n    width: 100%;\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    width: 250px;\r\n    float: left;\r\n  }\r\n\r\n  > img.bookImage {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst RightContainer = styled.div`\r\n  @media only screen and (max-width: 767px) {\r\n    width: 100%;\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    padding: 0 30px;\r\n    width: calc(100% - 250px);\r\n    float: left;\r\n    &:after {\r\n      content: \"\";\r\n      clear: both;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Item = styled.div`\r\n  margin-bottom: 10px;\r\n  color: #333;\r\n\r\n  &.description {\r\n    color: #555;\r\n    font-weight: 300;\r\n    line-height: 20px;\r\n    padding-right: 30px;\r\n    margin-bottom: 30px;\r\n  }\r\n\r\n  &.author-wrap {\r\n    display: flex;\r\n    > img {\r\n      width: 40px;\r\n      height: 40px;\r\n      border-radius: 20px;\r\n      margin-right: 15px;\r\n    }\r\n    > span {\r\n      width: calc(100% - 55px);\r\n      line-height: 40px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  height: 1px;\r\n  width: 100%;\r\n  background: #ccc;\r\n  margin: 15px 0;\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  margin-top: 30px;\r\n  width: 100%;\r\n  float: left;\r\n`;\r\n\r\nconst CommentCotainer = styled.div`\r\n  width: 100%;\r\n  height: 300px;\r\n\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst CommentForm = styled.form`\r\n  width: 90%;\r\n  height: 200px;\r\n\r\n  margin: 20px auto 0 auto;\r\n\r\n  position: relative;\r\n`;\r\n\r\nconst ComentTitle = styled.span`\r\n  display: block;\r\n  font-weight: 600;\r\n  margin-top: 20px;\r\n  margin-left: 40px;\r\n\r\n  :before {\r\n    content: \"댓글쓰기\";\r\n  }\r\n`;\r\n\r\nconst CommentSection = styled.textarea`\r\n  display: block;\r\n  width: 90%;\r\n  height: 100px;\r\n  margin: 10px auto 0 auto;\r\n`;\r\n\r\nconst CommentSubmit = styled.button`\r\n  width: 50px;\r\n  height: 20px;\r\n\r\n  right: 5%;\r\n  bottom: 10%;\r\n  position: absolute;\r\n\r\n  text-align: center;\r\n`;\r\n\r\nconst CommentList = styled.ul`\r\n  list-style: none;\r\n`;\r\n\r\nconst CommentTitle = styled.span`\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n\r\n  margin-left: 5%;\r\n`;\r\n\r\nconst Dividers = styled.div`\r\n  width: 100%;\r\n  border: 0.8px solid black;\r\n  margin-bottom: 5px;\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst Box = styled.div``;\r\n\r\nconst ReadForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ReadInput = styled.input`\r\n  all: unset;\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n  text-align: center;\r\n\r\n  border-bottom: 1px rgba(0, 0, 0, 0.3) solid;\r\n`;\r\n\r\nconst ReadButton = styled.button`\r\n  border: 1px solid black;\r\n  border-radius: 5px;\r\n  padding: 5px;\r\n  text-align: center;\r\n`;\r\nconst FieldSet = styled.fieldset``;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { bookApi, booklistApi } from \"../api\";\r\n\r\nimport Section from \"../Components/Section\";\r\nimport Book from \"../Components/Book\";\r\n\r\nconst BooklistDetail = ({\r\n  location: { pathname },\r\n  match: {\r\n    params: { id }\r\n  }\r\n}) => {\r\n  const [booklist, setBooklist] = useState([]);\r\n  const [book, setBook] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const showBooklist = async () => {\r\n    try {\r\n      const {\r\n        data: { data: booklists }\r\n      } = await booklistApi.getBooks(id);\r\n      setBooklist(booklists);\r\n      setBook(booklists.books);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const bookDetail = async item => {\r\n    history.push(`/book/${item.isbn}`);\r\n  };\r\n\r\n  const dummyFuntion = () => {};\r\n\r\n  useEffect(() => {\r\n    showBooklist();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <h1>제목 : {booklist.title}</h1>\r\n      <h1>설명 : {booklist.description}</h1>\r\n      <Section>\r\n        {book ? (\r\n          book.map(bookItem => (\r\n            <Book\r\n              key={bookItem.isbn}\r\n              bookItem={bookItem}\r\n              clickBook={bookDetail}\r\n              recordBook={dummyFuntion}\r\n            />\r\n          ))\r\n        ) : (\r\n          <h1>표시 될 책이 없습니다.</h1>\r\n        )}\r\n      </Section>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div``;\r\n\r\nexport default BooklistDetail;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport { booklistApi } from \"../api\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport Table from \"../Components/Table\";\r\nimport List from \"../Components/List\";\r\n\r\nconst Shelf = () => {\r\n  const history = useHistory();\r\n  const [booklist, setBooklist] = useState([]);\r\n\r\n  const booklistDetail = async item => {\r\n    history.push(`/booklist/${item}`);\r\n  };\r\n\r\n  const userBooklist = async nickname => {\r\n    history.push(`/${nickname}/shelf`);\r\n  };\r\n\r\n  const showAllBooklist = async () => {\r\n    try {\r\n      const {\r\n        data: { BooklistResult }\r\n      } = await booklistApi.getAllBooklist();\r\n\r\n      setBooklist(BooklistResult);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    showAllBooklist();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>SHELF | WTB</title>\r\n      </Helmet>\r\n      <Table>\r\n        {booklist ? (\r\n          booklist.map(item => (\r\n            <List\r\n              key={item._id}\r\n              booklist={item}\r\n              clickBooklist={booklistDetail}\r\n              userInfo={item.userId}\r\n              clickUser={userBooklist}\r\n            />\r\n          ))\r\n        ) : (\r\n          <h1>책장이 비어져있습니다.</h1>\r\n        )}\r\n      </Table>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div``;\r\n\r\nexport default Shelf;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useGoogleAuth, useIsValid } from \"../Components/AuthG\";\r\nimport { booklistApi, AuthApi } from \"../api\";\r\n\r\nimport Table from \"../Components/Table\";\r\nimport List from \"../Components/List\";\r\n\r\nconst UserShelf = () => {\r\n  const history = useHistory();\r\n  const googleAuth = useGoogleAuth();\r\n\r\n  const [user, setUser] = useState({});\r\n  const [booklist, setBooklist] = useState([]);\r\n  const valid = useIsValid();\r\n\r\n  const booklistDetail = async item => {\r\n    history.push(`/booklist/${item}`);\r\n  };\r\n\r\n  const deleteBL = async item => {\r\n    try {\r\n      const {\r\n        data: {\r\n          booklist: { booklists }\r\n        }\r\n      } = await booklistApi.deleteBookList(item, user.email);\r\n      const NEW_BL = booklists.map(item => {\r\n        item.userBL = true;\r\n        return item;\r\n      });\r\n      setBooklist(NEW_BL);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const progress = async () => {\r\n    const logger = booklist.books.map(book => {\r\n      const singleLogger = {\r\n        book: book._id,\r\n        user: user\r\n      };\r\n      return singleLogger;\r\n    });\r\n\r\n    const {\r\n      data: { logDataResult }\r\n    } = await booklistApi.getAllReadLog(logger);\r\n  };\r\n\r\n  const showBookList = async user => {\r\n    try {\r\n      if (user.length !== 0) {\r\n        const {\r\n          data: {\r\n            booklist: { booklists }\r\n          }\r\n        } = await booklistApi.getBookList(user.email);\r\n\r\n        const NEW_BL = booklists.map(item => {\r\n          item.userBL = true;\r\n          return item;\r\n        });\r\n        setBooklist(NEW_BL);\r\n      }\r\n    } catch (err) {\r\n      if (err.response !== undefined) AuthApi.checkAuth(err.response.data);\r\n    }\r\n  };\r\n\r\n  const getUser = async () => {\r\n    const authorized = await valid(googleAuth);\r\n    setUser(authorized);\r\n    showBookList(authorized);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <h1>{user.nickname}</h1>\r\n      <SLink to={`/${user.email}/addbooklist`}>\r\n        <AddBook>책장 생성하기</AddBook>\r\n      </SLink>\r\n      <Table>\r\n        {booklist ? (\r\n          booklist.map(item => (\r\n            <List\r\n              key={item._id}\r\n              booklist={item}\r\n              clickBooklist={booklistDetail}\r\n              deleteBL={deleteBL}\r\n              user={user._id}\r\n            />\r\n          ))\r\n        ) : (\r\n          <h1>책장이 비어져있습니다.</h1>\r\n        )}\r\n      </Table>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div``;\r\n\r\nconst SLink = styled(Link)`\r\n  margin-top: 10px;\r\n  color: #4a6ee0;\r\n`;\r\n\r\nconst AddBook = styled.button`\r\n  position: absolute;\r\n  padding: 5px;\r\n  height: 20px;\r\n  border: 1px solid black;\r\n  border-radius: 5px;\r\n  top: 10px;\r\n  left: 10px;\r\n`;\r\n\r\nexport default UserShelf;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { useGoogleAuth, useIsValid } from \"../Components/AuthG\";\r\n\r\nimport { userApi } from \"../api\";\r\n\r\nexport default function EditProfile() {\r\n  const googleAuth = useGoogleAuth();\r\n  const valid = useIsValid();\r\n  const history = useHistory();\r\n\r\n  const [user, setUser] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [changed, setChanged] = useState(true);\r\n\r\n  const getUser = async () => {\r\n    const authorized = await valid(googleAuth);\r\n    setUser(authorized);\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n    if (name !== \"\") {\r\n      setChanged(false);\r\n      const userInfo = {\r\n        email: user.email,\r\n        nickname: name\r\n      };\r\n      await userApi.updateUser(userInfo);\r\n    }\r\n  };\r\n\r\n  const updateName = e => {\r\n    const {\r\n      target: { value }\r\n    } = e;\r\n    setName(value);\r\n  };\r\n\r\n  const updateAgain = () => {\r\n    setChanged(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>EDIT PROFILE | WTB</title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>닉네임 수정</Title>\r\n        <Spacer style={{ height: \"100px\" }} />\r\n        <Section>\r\n          <Spacer />\r\n          {changed ? (\r\n            <>\r\n              <h3>새로운 닉네임을 입력해주세요.</h3>\r\n              <Form onSubmit={handleSubmit}>\r\n                <Input\r\n                  placeholder={user.nickname}\r\n                  value={name}\r\n                  onChange={updateName}\r\n                />\r\n              </Form>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <h1>새로 입력하신 닉네임 : {name}</h1>\r\n              <SLink to={`/${user.nickname}/profile`}>\r\n                마이페이지로 돌아가기\r\n              </SLink>\r\n            </>\r\n          )}\r\n          <Spacer />\r\n          {!changed && (\r\n            <button style={{ color: \"#4a6ee0\" }} onClick={updateAgain}>\r\n              다시 수정하시겠습니까?\r\n            </button>\r\n          )}\r\n        </Section>\r\n      </Header>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div``;\r\n\r\nconst Header = styled.div`\r\n  margin: 20px 20px;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  font-weight: 600;\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst Spacer = styled.div`\r\n  height: 15px;\r\n`;\r\n\r\nconst Section = styled.div`\r\n  font-weight: 500;\r\n  color: #8189a9;\r\n`;\r\n\r\nconst Form = styled.form``;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  border-bottom: 1px solid black;\r\n  text-align: center;\r\n  padding: 5px;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  margin-top: 10px;\r\n  color: #4a6ee0;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 32px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container role=\"img\" aria-label=\"Loading\">\r\n    <span>책을 불러오는 중.</span>\r\n  </Container>\r\n);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useGoogleAuth, useIsValid } from \"../Components/AuthG\";\r\nimport { bookApi, AuthApi } from \"../api\";\r\n\r\nimport Loader from \"../Components/Loader\";\r\nimport Section from \"../Components/Section\";\r\nimport Book from \"../Components/Book\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nexport default function AddBook() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [clickedBook, setClickedBook] = useState(0);\r\n  const [finalBook, setFinalBook] = useState(0);\r\n  const [term, setTerm] = useState(\"\");\r\n  const [book, setBook] = useState([]);\r\n\r\n  const [user, setUser] = useState({});\r\n  const [placeholder, setPlaceholder] = useState(\"제목을 입력 해주세요\");\r\n\r\n  const googleAuth = useGoogleAuth();\r\n  const valid = useIsValid();\r\n\r\n  const showBook = async () => {\r\n    //검색되는 책 숫자 === display\r\n\r\n    let display = 10;\r\n    try {\r\n      const { data: bookResults } = await bookApi.getBook(term, display);\r\n\r\n      const newBook = bookResults.map(item => {\r\n        item.selected = false;\r\n        item.title = item.title.replace(/(<([^>]+)>)/gi, \"\");\r\n        item.author = item.author.replace(/(<([^>]+)>)/gi, \"\");\r\n        item.description = item.description.replace(/(<([^>]+)>)/gi, \"\");\r\n        item.difficulty = 1;\r\n        item.time = 1;\r\n        item.complete = false;\r\n        return item;\r\n      });\r\n\r\n      setBook(newBook);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n    if (term !== \"\") {\r\n      showBook(term);\r\n    }\r\n  };\r\n\r\n  //검색 및 추가 버튼 누를시 데이터 초기화\r\n  const reset = () => {\r\n    setBook([]);\r\n    setClickedBook(0);\r\n  };\r\n\r\n  const updateTerm = e => {\r\n    const {\r\n      target: { value }\r\n    } = e;\r\n    setTerm(value);\r\n\r\n    reset();\r\n  };\r\n\r\n  const pickBook = async user => {\r\n    const newBook = book.filter(item => item.complete === true);\r\n    for (let item of newBook) {\r\n      item.selected = false;\r\n    }\r\n\r\n    const newBookData = {\r\n      newBook,\r\n      user: user._id\r\n    };\r\n\r\n    await bookApi.addBook(newBookData);\r\n    reset();\r\n    setTerm(\"\");\r\n    setFinalBook(0);\r\n    setPlaceholder(\r\n      \"책 추가가 완료 되었습니다. 추가 희망 시 다시 검색해주세요.\"\r\n    );\r\n  };\r\n\r\n  const selectedBook = bookItem => {\r\n    setClickedBook(prev => prev + (bookItem.selected ? 1 : -1));\r\n    book.filter(x => x.isbn === bookItem.isbn)[0].selected = !bookItem.selected;\r\n\r\n    setBook(book);\r\n    setFinalBook(\r\n      book.filter(x => x.complete === true && x.selected === true).length\r\n    );\r\n  };\r\n\r\n  const completeBook = bookItem => {\r\n    book.filter(x => x.isbn === bookItem.isbn)[0] = bookItem;\r\n    setBook(book);\r\n\r\n    setFinalBook(\r\n      book.filter(x => x.complete === true && x.selected === true).length\r\n    );\r\n  };\r\n\r\n  const getUser = async () => {\r\n    const authorized = await valid(googleAuth);\r\n    setUser(authorized);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>ADD BOOK | WTB</title>\r\n      </Helmet>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input placeholder={placeholder} value={term} onChange={updateTerm} />\r\n      </Form>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          {finalBook > 0 ? (\r\n            <>\r\n              <BookNum>추가 할 책 갯수 : {finalBook}</BookNum>\r\n              <Add\r\n                onClick={() => {\r\n                  pickBook(user);\r\n                }}\r\n              >\r\n                책 추가\r\n              </Add>\r\n            </>\r\n          ) : null}\r\n          {book && book.length > 0 && (\r\n            <Section title=\"Book Results\">\r\n              {book.map(bookItem => (\r\n                <Book\r\n                  key={bookItem.isbn}\r\n                  bookItem={bookItem}\r\n                  clickBook={selectedBook}\r\n                  recordBook={completeBook}\r\n                  addBook={true}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}{\" \"}\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div``;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 80%;\r\n  border-bottom: 0.5px solid black;\r\n  text-align: center;\r\n`;\r\n\r\nconst BookNum = styled.span`\r\n  font-size: 1rem;\r\n  left: 100px;\r\n`;\r\n\r\nconst Add = styled.button`\r\n  width: 100px;\r\n  height: 50px;\r\n  border: 1px solid blue;\r\n  text-align: center;\r\n  font-size: 1rem;\r\n  margin-left: 50px;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { bookApi, booklistApi } from \"../api\";\r\nimport { useGoogleAuth, useIsValid } from \"../Components/AuthG\";\r\n\r\nimport Loader from \"../Components/Loader\";\r\nimport Section from \"../Components/Section\";\r\nimport Book from \"../Components/Book\";\r\n\r\nconst AddBookList = () => {\r\n  const googleAuth = useGoogleAuth();\r\n  const valid = useIsValid();\r\n\r\n  const history = useHistory();\r\n  const [next, setNext] = useState(true);\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const [bookCollection, setBookCollection] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [clickedBook, setClickedBook] = useState(0);\r\n\r\n  const [term, setTerm] = useState(\"\");\r\n  const [book, setBook] = useState([]);\r\n\r\n  const [user, setUser] = useState([]);\r\n\r\n  const showBook = async () => {\r\n    try {\r\n      const {\r\n        data: { books: bookResult }\r\n      } = await booklistApi.serachBook(term);\r\n      setBook(bookResult);\r\n    } catch (e) {\r\n      history.push(`/`);\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const selectedBook = bookItem => {\r\n    if (!bookItem.selected) {\r\n      setBookCollection(prev => [...prev, bookItem]);\r\n    } else {\r\n      setBookCollection(prev => prev.filter(item => item._id !== bookItem._id));\r\n    }\r\n\r\n    setClickedBook(prev => prev + (bookItem.selected ? 1 : -1));\r\n    book.filter(x => x.isbn === bookItem.isbn)[0].selected = !bookItem.selected;\r\n    setBook(book);\r\n  };\r\n\r\n  const completeBook = bookItem => {};\r\n\r\n  const pickBook = async bookCollection => {\r\n    const leftOne = ({ _id, ...rest }) => _id;\r\n\r\n    const BookId = bookCollection.map(item => leftOne(item));\r\n\r\n    const Final_Booklist = {\r\n      title: title,\r\n      description: description,\r\n      books: BookId,\r\n      userId: user._id\r\n    };\r\n\r\n    await booklistApi.uploadBookList(Final_Booklist);\r\n    history.push(`/${user.nickname}/shelf`);\r\n  };\r\n\r\n  const handleBooklistInfo = e => {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n    if (title !== \"\" && description !== \"\") {\r\n      setNext(false);\r\n    }\r\n  };\r\n\r\n  const updateTitle = e => {\r\n    const {\r\n      target: { value }\r\n    } = e;\r\n    setTitle(value);\r\n  };\r\n\r\n  const updateDescription = e => {\r\n    const {\r\n      target: { value }\r\n    } = e;\r\n    setDescription(value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n    if (term !== \"\" && description !== \"\") {\r\n      showBook(term);\r\n    }\r\n  };\r\n\r\n  const updateTerm = e => {\r\n    const {\r\n      target: { value }\r\n    } = e;\r\n    setTerm(value);\r\n\r\n    setBook([]);\r\n  };\r\n\r\n  const getUser = async () => {\r\n    const authorized = await valid(googleAuth);\r\n    setUser(authorized);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>ADD BOOKLIST | WTB</title>\r\n      </Helmet>\r\n      {next ? (\r\n        <Form onSubmit={handleBooklistInfo}>\r\n          <Template>\r\n            <Input\r\n              placeholder=\"생성 할 북리스트 이름을 작성해주세요.\"\r\n              value={title}\r\n              onChange={updateTitle}\r\n            />\r\n            <Input\r\n              placeholder=\"생성 할 북리스트의 설명을 작성해주세요.\"\r\n              value={description}\r\n              onChange={updateDescription}\r\n            />\r\n            <NextBtn type=\"submit\">Next </NextBtn>\r\n          </Template>\r\n        </Form>\r\n      ) : (\r\n        <>\r\n          <AddBookForm\r\n            onSubmit={handleSubmit}\r\n            value={term}\r\n            onChange={updateTerm}\r\n          >\r\n            <Search placeholder=\"추가할 책을 검색 해주세요.\" />\r\n          </AddBookForm>\r\n          {loading ? (\r\n            <Loader />\r\n          ) : (\r\n            <>\r\n              {bookCollection.length > 0 ? (\r\n                <>\r\n                  <BookNum>북 리스트에 추가 할 책 갯수 : {clickedBook}</BookNum>\r\n                  <Add onClick={() => pickBook(bookCollection)}>\r\n                    책장 선정 완료\r\n                  </Add>\r\n                </>\r\n              ) : null}\r\n              {book && book.length > 0 && (\r\n                <Section title=\"Book Results\">\r\n                  {book.map(bookItem => (\r\n                    <Book\r\n                      key={bookItem.isbn}\r\n                      bookItem={bookItem}\r\n                      clickBook={selectedBook}\r\n                      recordBook={completeBook}\r\n                      addBook={false}\r\n                    />\r\n                  ))}\r\n                </Section>\r\n              )}\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div``;\r\n\r\nconst Form = styled.form`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst AddBookForm = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Template = styled.div`\r\n  width: 90%;\r\n  height: 90%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  width: 300px;\r\n  border-bottom: 1px solid black;\r\n  text-align: center;\r\n  padding: 10px;\r\n`;\r\n\r\nconst Search = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 80%;\r\n  border-bottom: 0.5px solid black;\r\n  text-align: center;\r\n`;\r\n\r\nconst BookNum = styled.span`\r\n  font-size: 1rem;\r\n  left: 100px;\r\n`;\r\n\r\nconst Add = styled.button`\r\n  height: 50px;\r\n  border: 1px solid blue;\r\n  text-align: center;\r\n  font-size: 1rem;\r\n  margin-left: 50px;\r\n  padding: 10px;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  margin-top: 10px;\r\n  color: #4a6ee0;\r\n`;\r\n\r\nconst Spacer = styled.div`\r\n  height: 15px;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  font-weight: 500;\r\n  color: #8189a9;\r\n`;\r\n\r\nconst NextBtn = styled.button`\r\n  border: 1px solid black;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport default AddBookList;\r\n","import styled from \"styled-components\";\r\n\r\nconst InputText = styled.input`\r\nwidth: 100%;\r\nheight: 54px;\r\npadding: 0 19px;\r\nborder: 1px solid #ccc;\r\nborder-radius: 3px;\r\nbackground-color: #fff;\r\nfont-size: 14px;\r\nline-height: 20px;\r\noutline: none;\r\n&:not(:first-child){\r\n  margin-top:10px;\r\n}\r\n&::placeholder{color:#ccc;opacity:1}\r\n`;\r\n\r\nexport default InputText;","import styled from \"styled-components\";\r\n\r\nconst Box = styled.div`\r\n// Mobile\r\n@media only screen and (max-width: 767px) {\r\n  width:calc(100% - 50px);\r\n  padding-top: 20px;\r\n}\r\n// PC\r\n@media only screen and (min-width: 768px) {\r\n  width: 340px;\r\n  padding-top: 90px;\r\n}\r\n\r\ncolor:#333;\r\nmargin: 0 auto;\r\nletter-spacing: -0.6px;\r\n\r\n.tit_login{\r\n  font-weight: 800;\r\n  font-size: 20px;\r\n  line-height: 20px;\r\n  text-align: center;\r\n}\r\n`;\r\n\r\nconst Form = styled.form`\r\nwidth: 100%;\r\npadding-top:30px;\r\n`;\r\n\r\nconst SignButton = styled.button`\r\n  margin-top: 10px;\r\n  display: block;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  height: 54px;\r\n  border-radius: 3px;\r\n  text-align: center;\r\n\r\n  \r\n  font-weight: 500;\r\n  font-size: 16px;\r\n\r\n  border: 1px solid #da3e58;\r\n  background-color: #fff;\r\n  color:#da3e58;\r\n\r\n  &.submit {\r\n    border: 1px solid #da3e58;\r\n    background-color: #da3e58;\r\n    color:#FFF;\r\n  }\r\n  &.register {\r\n    border: 1px solid #da3e58;\r\n    background-color: #fff;\r\n    color:#da3e58;\r\n  }\r\n  &.google {\r\n    margin-top:30px;\r\n    border: 1px solid #1a73e8;\r\n    background-color: #1a73e8;\r\n    color:#FFF;\r\n  }\r\n\r\n  text-align:center;\r\n\r\n`;\r\n\r\nexport { Box, Form, SignButton };","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { useGoogleAuth } from \"../Components/AuthG\";\r\nimport { userApi, AuthApi } from \"../api\";\r\n\r\nimport InputText from \"../Components/Style/InputText\";\r\nimport { Box, Form, SignButton } from \"../Components/Style/Sign\";\r\n\r\nconst Login = () => {\r\n  const { signIn } = useGoogleAuth();\r\n  const history = useHistory();\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const googleLogIn = async () => {\r\n    try {\r\n      //get the data of googleId, name, email from the one who logged in.\r\n      const {\r\n        profileObj: { googleId, name, email }\r\n      } = await signIn();\r\n\r\n      const userInfo = {\r\n        googleId,\r\n        name,\r\n        email\r\n      };\r\n\r\n      //CreateOrFind the user who logged In.\r\n      const {\r\n        data: {\r\n          success,\r\n          msg,\r\n          id_token,\r\n          userResult: { doc }\r\n        }\r\n      } = await userApi.ssoGLogin(userInfo);\r\n      if (success) {\r\n        AuthApi.setToken(id_token);\r\n        if (doc.gender === undefined) history.push(\"/addtionalInfo\");\r\n        else if (doc.newbie === true) history.push(`/addbook`);\r\n        else history.push(\"/\");\r\n      } else {\r\n        alert(msg);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async userInfo => {\r\n    try {\r\n      const {\r\n        data: { success, msg, id_token, userResult }\r\n      } = await userApi.wtbSignIn(userInfo);\r\n\r\n      if (success) {\r\n        AuthApi.setToken(id_token);\r\n        if (userResult.newbie) {\r\n          history.push(`/addbook`);\r\n        } else history.push(`/`);\r\n      } else {\r\n        alert(msg);\r\n      }\r\n    } catch (e) {\r\n      alert(\"유저정보가 매칭 되지 않습니다.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Helmet>\r\n        <title>LOGIN | WTB</title>\r\n      </Helmet>\r\n      <h3 className=\"tit_login\">로그인</h3>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <InputText\r\n          type=\"email\"\r\n          placeholder=\"이메일을 입력해주세요\"\r\n          name=\"email\"\r\n          ref={register}\r\n        />\r\n        <InputText\r\n          type=\"text\"\r\n          placeholder=\"패스워드를 입력해주세요\"\r\n          name=\"password\"\r\n          ref={register}\r\n        />\r\n        <div>\r\n          <SignButton type=\"submit\" className=\"submit\">로그인</SignButton>\r\n          <Link to={`/singup`}>\r\n            <SignButton className=\"register\">회원 가입</SignButton>\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n      <SignButton onClick={googleLogIn} className=\"google\">구글 로그인</SignButton>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { userApi, AuthApi } from \"../api\";\r\n\r\nimport styled from \"styled-components\";\r\nimport InputText from \"../Components/Style/InputText\";\r\nimport { Box, Form, SignButton } from \"../Components/Style/Sign\";\r\n\r\nconst SignUp = () => {\r\n  const history = useHistory();\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const onSubmit = async userInfo => {\r\n    try {\r\n      const {\r\n        data: {\r\n          success,\r\n          msg,\r\n          id_token,\r\n          userResult: { doc }\r\n        }\r\n      } = await userApi.wtbSignUp(userInfo);\r\n      if (success) {\r\n        AuthApi.setToken(id_token);\r\n        if (doc.newbie) history.push(`/addbook`);\r\n        else history.push(`/`);\r\n      } else {\r\n        alert(msg);\r\n      }\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Helmet>\r\n        <title>SIGN UP | WTB</title>\r\n      </Helmet>\r\n      <h3 className=\"tit_login\">회원가입</h3>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <InputText\r\n          type=\"email\"\r\n          placeholder=\"이메일을 입력해주세요.\"\r\n          name=\"email\"\r\n          ref={register}\r\n          required\r\n        />\r\n        <InputText\r\n          type=\"password\"\r\n          placeholder=\"비밀번호를 입력해주세요.\"\r\n          name=\"password\"\r\n          ref={register}\r\n          required\r\n        />\r\n        <InputText\r\n          type=\"text\"\r\n          placeholder=\"닉네임을 입력해주세요.\"\r\n          name=\"nickname\"\r\n          ref={register}\r\n          required\r\n        />\r\n        <Gender>\r\n          <legend>성별을 골라주세요</legend>\r\n          <input\r\n            id=\"male\"\r\n            type=\"radio\"\r\n            value=\"male\"\r\n            name=\"gender\"\r\n            ref={register}\r\n            defaultChecked\r\n          />\r\n          <label htmlFor=\"male\">남자</label>\r\n          <input\r\n            id=\"femlae\"\r\n            type=\"radio\"\r\n            value=\"female\"\r\n            name=\"gender\"\r\n            ref={register}\r\n          />\r\n          <label htmlFor=\"female\">여자</label>\r\n        </Gender>\r\n\r\n        <div>\r\n          {/* <SLink to={`/singup`}> */}\r\n          <SignButton className=\"submit\">완료</SignButton>\r\n          {/* </SLink> */}\r\n        </div>\r\n      </Form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst Gender = styled.fieldset`\r\n  width: 100%;\r\n  margin-top: 15px;\r\n  margin-bottom: 20px;\r\n  text-align:center;\r\n\r\n  legend {\r\n    display:inline-block;\r\n    color:#333;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    margin-bottom:5px;\r\n  }\r\n  label {\r\n    display: inline-block;\r\n    color: #333;\r\n    font-size: 16px;\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nexport default SignUp;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { useGoogleAuth, useIsValid } from \"../Components/AuthG\";\r\nimport { userApi } from \"../api\";\r\n\r\nconst AddGoogleUserInfo = () => {\r\n  const history = useHistory();\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const googleAuth = useGoogleAuth();\r\n  const valid = useIsValid();\r\n\r\n  const [user, setUser] = useState({});\r\n\r\n  const onSubmit = async userInfo => {\r\n    userInfo.userId = user._id;\r\n\r\n    try {\r\n      await userApi.ssoGdetail(userInfo);\r\n      history.push(\"/addbook\");\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  const getUser = async () => {\r\n    const authorized = await valid(googleAuth);\r\n    setUser(authorized);\r\n    if (authorized.gender !== undefined) {\r\n      history.push(`/addbook`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <LoginInput\r\n          type=\"number\"\r\n          placeholder=\"나이\"\r\n          name=\"age\"\r\n          ref={register}\r\n          required\r\n        />\r\n        <Gender>\r\n          <legend>성별을 골라주세요</legend>\r\n          <input\r\n            id=\"male\"\r\n            type=\"radio\"\r\n            value=\"male\"\r\n            name=\"gender\"\r\n            ref={register}\r\n            defaultChecked\r\n          />\r\n          <label htmlFor=\"male\">남자</label>\r\n          <input\r\n            id=\"femlae\"\r\n            type=\"radio\"\r\n            value=\"female\"\r\n            name=\"gender\"\r\n            ref={register}\r\n          />\r\n          <label htmlFor=\"female\">여자</label>\r\n        </Gender>\r\n\r\n        <ButtonSection>\r\n          {/* <SLink to={`/singup`}> */}\r\n          <Button>Submit</Button>\r\n          {/* </SLink> */}\r\n        </ButtonSection>\r\n      </Form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddGoogleUserInfo;\r\n\r\nconst Gender = styled.fieldset``;\r\n\r\nconst Box = styled.div`\r\n  width: 100%;\r\n  height: 60vh;\r\n  min-height: 540px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  width: 500px;\r\n  height: 500px;\r\n  flex-flow: column wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst LoginInput = styled.input`\r\n  all: unset;\r\n\r\n  width: 80%;\r\n\r\n  margin-bottom: 30px;\r\n  text-align: center;\r\n\r\n  border-bottom: 1px rgba(0, 0, 0, 0.3) solid;\r\n`;\r\n\r\nconst ButtonSection = styled.div`\r\n  width: 50%;\r\n  height: 20%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  all: unset;\r\n  margin-top: 15px;\r\n  border: 1px solid black;\r\n  border-radius: 5px;\r\n  padding: 5px;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { searchApi } from \"../api\";\r\nimport queryString from \"query-string\";\r\nimport Book from \"../Components/Book\";\r\nimport Section from \"../Components/Section\";\r\nimport Table from \"../Components/Table\";\r\nimport List from \"../Components/List\";\r\n\r\nconst Search = ({ match, location }) => {\r\n  const [books, setBooks] = useState([]);\r\n  const [bookList, setBookList] = useState([]);\r\n  const query = queryString.parse(location.search);\r\n  const keyword = query.keyword === undefined ? \"\" : query.keyword;\r\n\r\n  const showResult = async () => {\r\n    try {\r\n      const {\r\n        data: { books, booklist }\r\n      } = await searchApi.searchBook(keyword).catch(function(err) {\r\n        if (err.response) {\r\n          // if (err.response.msg !== `success`) {\r\n          //   return <Redirect to=\"/\" />;\r\n          // }\r\n        }\r\n      });\r\n      setBooks(books);\r\n      setBookList(booklist);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const history = useHistory();\r\n  const bookDetail = async item => {\r\n    history.push(`/book/${item.isbn}`);\r\n  };\r\n\r\n  const booklistDetail = async item => {\r\n    history.push(`/booklist/${item}`);\r\n  };\r\n\r\n  const userBooklist = async nickname => {\r\n    history.push(`/${nickname}/shelf`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    showResult();\r\n  }, [keyword]);\r\n\r\n  return (\r\n    <Container>\r\n      <h1>{keyword}의 검색 결과 입니다.</h1>\r\n\r\n      <Section>\r\n        {books ? (\r\n          books.map(bookItem => (\r\n            <Book\r\n              key={bookItem.isbn}\r\n              bookItem={bookItem}\r\n              clickBook={bookDetail}\r\n            />\r\n          ))\r\n        ) : (\r\n          <h1>No Books</h1>\r\n        )}\r\n      </Section>\r\n\r\n      <Table>\r\n        {bookList ? (\r\n          bookList.map(item => (\r\n            <List\r\n              key={item._id}\r\n              booklist={item}\r\n              clickBooklist={booklistDetail}\r\n              userInfo={item.userId}\r\n              clickUser={userBooklist}\r\n            />\r\n          ))\r\n        ) : (\r\n          <h1>책장이 비어져있습니다.</h1>\r\n        )}\r\n      </Table>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div``;\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useGoogleAuth } from \"../AuthG\";\r\n\r\nimport { AuthApi } from \"../../api\";\r\n\r\nconst LoginBtn = () => {\r\n  const { signOut, isSignedIn } = useGoogleAuth();\r\n\r\n  const isTokenExist = AuthApi.getToken();\r\n\r\n  const LogOut = () => {\r\n    AuthApi.clearToken(signOut);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isSignedIn || isTokenExist != null ? (\r\n        <UserLink to=\"#\" onClick={LogOut}>\r\n          로그아웃\r\n        </UserLink>\r\n      ) : (\r\n        <UserLink to=\"/login\">로그인</UserLink>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst UserLink = styled(Link)`\r\n  float: left;\r\n  line-height: 32px;\r\n  padding-left: 10px;\r\n  color: #da3e58;\r\n  font-weight: 500;\r\n  font-family: \"Noto Sans\";\r\n`;\r\n\r\nexport default LoginBtn;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\n//component화 시켜야됨\r\nexport default () => {\r\n    const isClient = typeof window === \"object\";\r\n  \r\n    function getSize() {\r\n      return {\r\n        width: isClient ? window.innerWidth : undefined,\r\n        height: isClient ? window.innerHeight : undefined\r\n      };\r\n    }\r\n  \r\n    const [windowSize, setWindowSize] = useState(getSize);\r\n  \r\n    useEffect(() => {\r\n      if (!isClient) {\r\n        return false;\r\n      }\r\n  \r\n      function handleResize() {\r\n        setWindowSize(getSize());\r\n      }\r\n  \r\n      window.addEventListener(\"resize\", handleResize);\r\n      return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []); // Empty array ensures that effect is only run on mount and unmount\r\n  \r\n    return windowSize;\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport useWindowSize from \"./WindowSize\";\r\n\r\nconst SearchBar = ({ text, submitSearch }) => {\r\n  const [searchText, setSearchText] = useState(text);\r\n  const [visible, setVisible] = useState(false);\r\n  const size = useWindowSize();\r\n  const inputTextRef = React.createRef();\r\n\r\n  const focusInputText = () => {\r\n    if(size.width < 768){\r\n      if(visible) {\r\n        inputTextRef.current.focus();\r\n        console.log(inputTextRef);\r\n      }\r\n    }\r\n  }\r\n\r\n  const clickEvent = e => {\r\n    submitSearch(searchText);\r\n    setSearchText(\"\");\r\n    clickVisible();\r\n  };\r\n\r\n  const clickVisible = e => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  const _handleChange = e => {\r\n    setSearchText(e.target.value);\r\n  };\r\n\r\n  const _handleKeyPress = e => {\r\n    if (e.key === \"Enter\") {\r\n      clickEvent();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    focusInputText();\r\n  }, [visible]);\r\n\r\n  return (\r\n    <>\r\n      { size.width >= 768 ? (\r\n        <>\r\n          <InputText\r\n            type=\"text\"\r\n            value={searchText}\r\n            onChange={_handleChange.bind(this)}\r\n            onKeyPress={_handleKeyPress}\r\n            placeholder=\"검색할 책의 정보를 입력해주세요.\"\r\n          />\r\n          <InputImage\r\n            type=\"image\"\r\n            src=\"/img/common/ico_search.png\"\r\n            className=\"btn_search\"\r\n            onClick={clickEvent}\r\n          />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <InputImage\r\n            type=\"image\"\r\n            className={visible ? `invisible` : ``}\r\n            src=\"/img/common/ico_search.png\"\r\n            onClick={clickVisible}\r\n          />\r\n          <Overlay className={visible ? `` : `invisible`}>\r\n            <InputText\r\n              type=\"text\"\r\n              ref={inputTextRef}\r\n              value={searchText}\r\n              onChange={_handleChange.bind(this)}\r\n              onKeyPress={_handleKeyPress}\r\n              placeholder=\"검색할 책의 정보를 입력해주세요.\"\r\n            />\r\n            <InputImage\r\n              type=\"image\"\r\n              className={`submit`}\r\n              src=\"/img/common/ico_search.png\"\r\n              onClick={clickEvent}\r\n            />\r\n            <div className={`overlay-close`} onClick={clickVisible}></div>\r\n          </Overlay>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst InputText = styled.input`\r\n  // PC\r\n  @media only screen and (min-width: 768px) {\r\n    width: 238px;\r\n    height: 36px;\r\n    padding: 0 50px 0 20px;\r\n    border: 1px solid #f7f7f6;\r\n    border-radius: 18px;\r\n    background-color: #f7f7f7;\r\n    font-family: \"Noto Sans\";\r\n    font-weight: 400;\r\n    font-size: 12px;\r\n    color: #666;\r\n    line-height: 16px;\r\n    outline: none;\r\n    letter-spacing: -0.05em;\r\n  }\r\n  // Mobile\r\n  @media only screen and (max-width: 767px) {\r\n    width: 100%;\r\n    height: 50px;\r\n    padding: 0 50px 0 15px;\r\n    border: 4px solid #da3e58;\r\n    background-color: #f7f7f7;\r\n    font-family: \"Noto Sans\";\r\n    font-weight: 600;\r\n    font-size: 18px;\r\n    color: #333;\r\n    line-height: 22px;\r\n    outline: none;\r\n    letter-spacing: -0.05em;\r\n  }\r\n  \r\n`;\r\n\r\nconst InputImage = styled.input`\r\n  // PC\r\n  @media only screen and (min-width: 768px) {\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 3px;\r\n    width: 30px;\r\n    height: 30px;\r\n  }\r\n  // Mobile\r\n  @media only screen and (max-width: 767px) {\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 15px;\r\n    width: 30px;\r\n    height: 30px;\r\n    &.invisible{\r\n      display:none;\r\n    }\r\n    &.submit{\r\n      top:10px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0,0,0,.8);\r\n  &.invisible{\r\n    display:none;\r\n  }\r\n  .overlay-close{\r\n    width:100%;\r\n    height:100%;\r\n  }\r\n`;\r\n\r\nexport default SearchBar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, withRouter, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { useGoogleAuth, useIsValid } from \"../AuthG\";\r\n\r\nimport LoginBtn from \"./LoginBtn\";\r\nimport SearchBar from \"../SearchBar\";\r\nimport { AuthApi } from \"../../api\";\r\nimport useWindowSize from \"../WindowSize\";\r\nimport useFloatBtnActive from \"../FloatBtnActivate\";\r\n\r\nimport Icon from \"@mdi/react\";\r\nimport {\r\n  mdiHome,\r\n  mdiHomeOutline,\r\n  mdiBook,\r\n  mdiBookOutline,\r\n  mdiBookshelf,\r\n  mdiAccount,\r\n  mdiBookPlus\r\n} from \"@mdi/js\";\r\n\r\nexport default withRouter(({ location: { pathname } }) => {\r\n  \r\n  const history = useHistory();\r\n\r\n  const [menuHover, setMenuHover] = useState(false);\r\n  const [subMenuHover, setSubMenuHover] = useState(false);\r\n\r\n  const [user, setUser] = useState([]);\r\n  const valid = useIsValid();\r\n\r\n  const googleAuth = useGoogleAuth();\r\n  const isTokenExist = AuthApi.getToken();\r\n\r\n  const size = useWindowSize();\r\n  const icon = useFloatBtnActive();\r\n\r\n  const getUser = async () => {\r\n    const authorized = await valid(googleAuth);\r\n    setUser(authorized);\r\n  };\r\n\r\n  const searchBook = searchText => {\r\n    console.log(\"in searchBook\" + searchText);\r\n    history.push(\r\n      {\r\n        pathname: `/search`,\r\n        search: `?keyword=${searchText}`\r\n      }\r\n    );\r\n  };\r\n\r\n  const enterMenu = () => {\r\n    setMenuHover(true);\r\n  };\r\n  const leaveMenu = () => {\r\n    setMenuHover(false);\r\n  };\r\n  const enterSubMenu = () => {\r\n    setSubMenuHover(true);\r\n  };\r\n  const leaveSubMenu = () => {\r\n    setSubMenuHover(false);\r\n  };\r\n\r\n  const pathCheck = () => {\r\n    switch (pathname) {\r\n      case \"/\":\r\n        return \"home\";\r\n      case \"/books\":\r\n        return \"book\";\r\n      case \"/shelf\":\r\n        return \"shelf\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  return (\r\n    <Header>\r\n      {size.width >= 768 ? (\r\n        <>\r\n          <HeaderBanner>\r\n            <BannerLink to=\"#\">WHAT THE BOOKS 헤더 띠 배너!</BannerLink>\r\n          </HeaderBanner>\r\n          <HeaderUser>\r\n            <UserMenuUl>\r\n              {isTokenExist !== null ? (\r\n                <UserMenuLi>\r\n                  <UserLink to={`/${user.nickname}/profile`}>내 정보</UserLink>\r\n                </UserMenuLi>\r\n              ) : null}\r\n              <UserMenuLi>\r\n                <LoginBtn />\r\n              </UserMenuLi>\r\n            </UserMenuUl>\r\n          </HeaderUser>\r\n          <HeaderLogo>\r\n            <LogoLink to=\"/\">\r\n              <Logo src=\"/img/wtblogo_r.png\" alt=\"WHAT THE BOOKS\" />\r\n            </LogoLink>\r\n          </HeaderLogo>\r\n          <HeaderMenu>\r\n            <List>\r\n              <Item className=\"all\">\r\n                <SLink\r\n                  to=\"#\"\r\n                  className={(menuHover || subMenuHover) && \"hover\"}\r\n                  onMouseEnter={enterMenu}\r\n                  onMouseLeave={leaveMenu}\r\n                >\r\n                  <span className=\"ico\"></span>\r\n                  <span className=\"txt\">전체메뉴</span>\r\n                </SLink>\r\n              </Item>\r\n              <Item>\r\n                <SLink to=\"/books\">\r\n                  <span className=\"txt\">오늘의 책</span>\r\n                </SLink>\r\n              </Item>\r\n              <Item>\r\n                <SLink to=\"/\">\r\n                  <span className=\"txt\">테마가 있는 책장</span>\r\n                </SLink>\r\n              </Item>\r\n              {isTokenExist !== null && (\r\n                <Item>\r\n                  <SLink to={`/${user.nickname}/shelf`}>\r\n                    <span className=\"txt\">나의책장</span>\r\n                  </SLink>\r\n                </Item>\r\n              )}\r\n            </List>\r\n            {(menuHover || subMenuHover) && (\r\n              <SubMenuUl\r\n                onMouseEnter={enterSubMenu}\r\n                onMouseLeave={leaveSubMenu}\r\n              >\r\n                <SubMenuLi>\r\n                  <SubLink to=\"#\">\r\n                    <span className=\"txt\">오늘의 책</span>\r\n                  </SubLink>\r\n                </SubMenuLi>\r\n                <SubMenuLi>\r\n                  <SSubLink to=\"#\">\r\n                    <span className=\"txt\">새로운 책</span>\r\n                  </SSubLink>\r\n                </SubMenuLi>\r\n                <SubMenuLi>\r\n                  <SSubLink to=\"#\">\r\n                    <span className=\"txt\">추천 책</span>\r\n                  </SSubLink>\r\n                </SubMenuLi>\r\n                <SubMenuLi>\r\n                  {isTokenExist !== null ? (\r\n                    <SSubLink to={`/${user.nickname}/addbook`}>\r\n                      <span className=\"txt\">책 추가하기</span>\r\n                    </SSubLink>\r\n                  ) : null}\r\n                </SubMenuLi>\r\n                <SubMenuLi>\r\n                  <SubLink to=\"#\">\r\n                    <span className=\"txt\">테마가 있는 책장</span>\r\n                  </SubLink>\r\n                </SubMenuLi>\r\n                <SubMenuLi>\r\n                  <SSubLink to=\"#\">\r\n                    <span className=\"txt\">장르별..?</span>\r\n                  </SSubLink>\r\n                </SubMenuLi>\r\n                <SubMenuLi>\r\n                  <SSubLink to=\"#\">\r\n                    <span className=\"txt\">관심사별..?</span>\r\n                  </SSubLink>\r\n                </SubMenuLi>\r\n                <SubMenuLi>\r\n                  <SSubLink to=\"#\">\r\n                    <span className=\"txt\">성별..?</span>\r\n                  </SSubLink>\r\n                </SubMenuLi>\r\n                <SubMenuLi>\r\n                  <SubLink to=\"#\">\r\n                    <span className=\"txt\">나만의 메뉴</span>\r\n                  </SubLink>\r\n                </SubMenuLi>\r\n                <SubMenuLi>\r\n                  <SSubLink to=\"#\">\r\n                    <span className=\"txt\">내 책장</span>\r\n                  </SSubLink>\r\n                </SubMenuLi>\r\n                <SubMenuLi>\r\n                  <SSubLink to=\"#\">\r\n                    <span className=\"txt\">프로필</span>\r\n                  </SSubLink>\r\n                </SubMenuLi>\r\n                <SubMenuLi>\r\n                  <SSubLink to=\"#\">\r\n                    <span className=\"txt\">나의 활동</span>\r\n                  </SSubLink>\r\n                </SubMenuLi>\r\n              </SubMenuUl>\r\n            )}\r\n            {/* 검색창 */}\r\n            <div className=\"iconAddBook\">\r\n              <Link to={`/addbook`}>\r\n                <Icon path={mdiBookPlus} size={0.85} />\r\n              </Link>\r\n            </div>\r\n            <div className=\"searchbar\">\r\n              <SearchBar text=\"\" submitSearch={searchBook}></SearchBar>\r\n            </div>\r\n          </HeaderMenu>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <HeaderBanner>\r\n            <BannerLink to=\"#\">WHAT THE BOOKS 헤더 띠 배너!</BannerLink>\r\n          </HeaderBanner>\r\n          <HeaderLogo>\r\n            <LogoLink to=\"/\">\r\n              <Logo src=\"/img/wtblogo_r.png\" alt=\"WHAT THE BOOKS\" />\r\n            </LogoLink>\r\n            <div className=\"searchbar\">\r\n              <SearchBar text=\"\" submitSearch={searchBook}></SearchBar>\r\n            </div>\r\n          </HeaderLogo>\r\n          <HeaderMenu>\r\n            <List>\r\n              <Item>\r\n                <MenuLink to=\"/\" className={pathCheck() === \"home\" && \"active\"}>\r\n                  <Icon path={mdiHome} size={1.4} />\r\n                  <MenuText>홈</MenuText>\r\n                </MenuLink>\r\n              </Item>\r\n              <Item>\r\n                <MenuLink\r\n                  to=\"/books\"\r\n                  className={pathCheck() === \"book\" && \"active\"}\r\n                >\r\n                  <Icon path={mdiBookOutline} size={1.4} />\r\n                  <MenuText>책</MenuText>\r\n                </MenuLink>\r\n              </Item>\r\n              <Item>\r\n                <MenuLink\r\n                  to=\"/shelf\"\r\n                  className={pathCheck() === \"shelf\" && \"active\"}\r\n                >\r\n                  <Icon path={mdiBookshelf} size={1.4} />\r\n                  <MenuText>책묶음</MenuText>\r\n                </MenuLink>\r\n              </Item>\r\n              <Item>\r\n                <MenuLink\r\n                  to=\"/profile\"\r\n                  className={pathCheck() === \"my\" && \"active\"}\r\n                >\r\n                  <Icon path={mdiAccount} size={1.4} />\r\n                  <MenuText>My</MenuText>\r\n                </MenuLink>\r\n              </Item>\r\n            </List>\r\n          </HeaderMenu>\r\n          <div className={icon ? \"footer-button active\" : \"footer-button\"}>\r\n            {isTokenExist !== null && (\r\n              <button className=\"button-float\">\r\n                <Link to={`/addbook`}>\r\n                  <Icon path={mdiBookPlus} size={1} />\r\n                </Link>\r\n              </button>\r\n            )}\r\n            <button className=\"button-float button-top\">\r\n              <span>to the Top</span>\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </Header>\r\n  );\r\n});\r\n\r\nconst MenuText = styled.span`\r\n  display: block;\r\n  line-height: 16px;\r\n  font-size: 10px;\r\n`;\r\n\r\nconst MenuLink = styled(Link)`\r\n  display: block;\r\n  margin: 10px 5px 0px;\r\n  padding: 3px;\r\n  width: calc(100% - 10px);\r\n  text-align: center;\r\n  text-decoration: none;\r\n  color: #60656a;\r\n  //border-radius:20px;\r\n\r\n  svg path {\r\n    fill: #60656a;\r\n  }\r\n\r\n  &.active {\r\n    //background:RGBA(226, 1, 54, 0.7);\r\n    svg path {\r\n      fill: RGBA(226, 1, 54, 0.7);\r\n    }\r\n    span {\r\n      color: RGBA(226, 1, 54, 0.7);\r\n    }\r\n    //border-bottom: RGBA(226, 1, 54, 0.7) solid 1px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  z-index: 300;\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    &:after {\r\n      content: \"\";\r\n      position: absolute;\r\n      z-index: 299;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 9px;\r\n      background: url(/img/common/bg_1x9.png) repeat-x 0 100%;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    border-bottom: 0.5px solid #efefef;\r\n\r\n    .footer-button {\r\n      z-index: 56;\r\n      font-size: 14px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n      position: fixed;\r\n      bottom: 80px;\r\n      right: 0px;\r\n      transform: translateX(110%);\r\n      overflow: visible;\r\n      background: #000;\r\n\r\n      .button-float {\r\n        width: 50px;\r\n        height: 50px;\r\n        margin-bottom: 8px;\r\n        border-radius: 50%;\r\n        font-size: 14px;\r\n        box-shadow: 0 4px 6px 0 rgba(0, 0, 0, 0.15);\r\n        background-color: RGBA(226, 1, 54, 0.7);\r\n        color: #fff;\r\n        cursor: pointer;\r\n        transition: all 0.5s ease;\r\n        text-align: center;\r\n\r\n        svg path {\r\n          fill: #fff;\r\n        }\r\n\r\n        &.button-top {\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          background-color: #fff;\r\n          border: 1px solid #dedede;\r\n          transition: all 0.9s ease;\r\n\r\n          span {\r\n            font-size: 0;\r\n            color: #fff;\r\n            &:before {\r\n              content: \"\";\r\n              display: block;\r\n              width: 10px;\r\n              height: 2px;\r\n              background-color: #555;\r\n              margin-top: 2px;\r\n              margin-left: 1px;\r\n            }\r\n            &:after {\r\n              content: \"\";\r\n              display: block;\r\n              width: 6px;\r\n              height: 6px;\r\n              margin-top: 4px;\r\n              margin-left: 2px;\r\n              border: solid #555;\r\n              border-width: 0 2px 2px 0;\r\n              transform: rotate(-135deg);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      &.active {\r\n        button {\r\n          transform: translateX(-80px);\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst HeaderBanner = styled.div`\r\n  position: relative;\r\n  min-width: 800px;\r\n  text-align: center;\r\n  line-height: 42px;\r\n  font-size: 14px;\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    min-width: 0;\r\n    width: 100%;\r\n    line-height: 30px;\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst HeaderUser = styled.div`\r\n  //display:flex;\r\n  //justify-content: flex-end;\r\n  width: 100%;\r\n  height: 50px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  position: relative;\r\n  padding: 9px 0;\r\n`;\r\n\r\nconst UserMenuUl = styled.ul`\r\n  @media only screen and (min-width: 768px) {\r\n    float: right;\r\n    line-height: 32px;\r\n  }\r\n`;\r\nconst UserMenuLi = styled.li`\r\n  @media only screen and (max-width: 767px) {\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    float: left;\r\n    color: #333;\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n    letter-spacing: -0.3px;\r\n\r\n    &:after {\r\n      content: \"\";\r\n      float: right;\r\n      width: 1px;\r\n      height: 13px;\r\n      margin-top: 9px;\r\n      background-color: #d8d8d8;\r\n    }\r\n\r\n    &:last-child {\r\n      &:after {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst HeaderLogo = styled.div`\r\n  width: 100%;\r\n  height: 30px;\r\n  position: relative;\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    height: 56px;\r\n    position: relative;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst HeaderMenu = styled.div`\r\n  @media only screen and (max-width: 767px) {\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    position: relative;\r\n    width: 800px;\r\n    height: 56px;\r\n    margin: 0 auto;\r\n\r\n    .searchbar {\r\n      position: absolute;\r\n      right: 0px;\r\n      top: 10px;\r\n      width: 238px;\r\n    }\r\n\r\n    .iconAddBook {\r\n      position: absolute;\r\n      right: -40px;\r\n      top: 10px;\r\n      width: 36px;\r\n      height: 36px;\r\n      padding: 7.8px;\r\n      border-radius: 50%;\r\n      background: #f7f7f7;\r\n      svg path {\r\n        fill: #333;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst List = styled.ul`\r\n  @media only screen and (max-width: 767px) {\r\n    display: flex;\r\n    position: fixed;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    justify-content: space-between;\r\n    transform: translateY(0);\r\n    transition: transform 0.25s;\r\n    z-index: 1;\r\n    margin-left: 0;\r\n    box-shadow: 0 0 10px 2px rgba(0, 0, 0, 0.15);\r\n    background-color: #fff;\r\n    padding: 0 0 max(8px, env(safe-area-inset-bottom));\r\n    width: 100%;\r\n    list-style: none;\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    float: left;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Item = styled.li`\r\n  @media only screen and (max-width: 767px) {\r\n    width: 100%;\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    float: left;\r\n    background: url(/img/common/line_1x11_c_ccc.png) no-repeat 100% 23px;\r\n\r\n    &.all {\r\n      > a {\r\n        padding-left: 0px;\r\n      }\r\n    }\r\n\r\n    &:last-child {\r\n      background: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  overflow: hidden;\r\n  float: left;\r\n  height: 55px;\r\n  padding: 16px 31px 0 29px;\r\n  font-size: 16px;\r\n  color: #333;\r\n  line-height: 20px;\r\n\r\n  span.txt {\r\n    font-weight: 700;\r\n    font-family: \"Noto Sans\";\r\n  }\r\n  span.ico {\r\n    background: url(/img/common/ico_menu_all_off.png) no-repeat 0 0;\r\n    background-size: 16px 14px;\r\n    float: left;\r\n    width: 16px;\r\n    height: 14px;\r\n    margin: 4px 14px 0 0;\r\n  }\r\n\r\n  &:hover,\r\n  &.hover {\r\n    span.txt {\r\n      color: #da3e58;\r\n      border-bottom: 1px solid #da3e58;\r\n    }\r\n    span.ico {\r\n      background: url(/img/common/ico_menu_all.png) no-repeat 0 0;\r\n      background-size: 16px 14px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BannerLink = styled(Link)`\r\n  display: block;\r\n  height: 42px;\r\n  background-color: #da3e58;\r\n  color: #fff;\r\n  font-family: \"Noto Sans\";\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    height: 30px;\r\n  }\r\n`;\r\nconst LogoLink = styled(Link)`\r\n  position: absolute;\r\n  left: 50%;\r\n  bottom: 3px;\r\n  margin-left: -66px;\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    margin-left: -51px;\r\n  }\r\n`;\r\n\r\nconst UserLink = styled(Link)`\r\n  float: left;\r\n  padding: 0 10px;\r\n  font-family: \"Noto Sans\";\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 136px;\r\n  height: 54.4px;\r\n  margin-right: 30px;\r\n  line-height: 30px;\r\n  font-weight: 600;\r\n  font-size: 2rem;\r\n  color: #e5e5e5;\r\n  text-align: center;\r\n\r\n  transition: 0.5s;\r\n\r\n  > a {\r\n    line-height: 30px;\r\n  }\r\n\r\n  :hover {\r\n    color: #aaa;\r\n  }\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    width: 102px;\r\n    height: 40.8px;\r\n    margin-right: 0;\r\n  }\r\n`;\r\n\r\nconst SubMenuUl = styled.ul`\r\n  position: absolute;\r\n  left: -20px;\r\n  top: 56px;\r\n  z-index: 300;\r\n  display: block;\r\n  width: 200px;\r\n  background: #f8f8f8;\r\n  border: 1px solid RGB(0, 0, 0, 0.3);\r\n  padding-bottom: 5px;\r\n`;\r\nconst SubMenuLi = styled.li`\r\n  display: block;\r\n  width: 100%;\r\n\r\n  a:hover {\r\n    span.txt {\r\n      color: #da3e58;\r\n      border-bottom: 1px solid #da3e58;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SubLink = styled(Link)`\r\n  padding: 15px 15px 10px;\r\n  width: 100%;\r\n  height: 45px;\r\n  display: block;\r\n  background: #fff;\r\n  color: #333;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\nconst SSubLink = styled(Link)`\r\n  padding: 10px 15px;\r\n  padding-left: 30px;\r\n  width: 100%;\r\n  height: 40px;\r\n  display: block;\r\n  background: #f8f8f8;\r\n  color: #333;\r\n  font-size: 13px;\r\n  font-weight: 500;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nexport default () => {\r\n    const isClient = typeof window === \"object\";\r\n  \r\n    function getVisible() {\r\n      if (200 < window.scrollY) return true;\r\n      else return false;\r\n    }\r\n  \r\n    const [visible, setVisible] = useState(getVisible);\r\n  \r\n    useEffect(() => {\r\n      if (!isClient) {\r\n        return false;\r\n      }\r\n  \r\n      function handleScroll() {\r\n        setVisible(getVisible);\r\n      }\r\n  \r\n      window.addEventListener(\"scroll\", handleScroll);\r\n      return () => window.removeEventListener(\"scroll\", handleScroll);\r\n    }, []); // Empty array ensures that effect is only run on mount and unmount\r\n  \r\n    return visible;\r\n  }","import Header from \"./Header\";\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = ({ children }) => (\r\n  <Container>\r\n    <Template>{children}</Template>\r\n  </Container>\r\n);\r\n\r\nconst Container = styled.div`\r\n  margin: 0px auto 20px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst Template = styled.div`\r\n  position: relative;\r\n  margin: 0 auto;\r\n  padding-top: 30px;\r\n  width: 100vw;\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    width: calc(100% - 20px);\r\n    margin-bottom:100px;\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    width: 800px;\r\n    max-width: 100%;\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\n\r\nimport Home from \"../Screens/Home\";\r\nimport Books from \"../Screens/Books\";\r\nimport Profile from \"../Screens/Profile\";\r\nimport BookDetail from \"../Screens/BookDetail\";\r\nimport BooklistDetail from \"../Screens/BooklistDetail\";\r\nimport Shelf from \"../Screens/Shelf\";\r\nimport UserShelf from \"../Screens/UserShelf\";\r\nimport EditProfile from \"../Screens/EditProfile\";\r\nimport AddBook from \"../Screens/AddBook\";\r\nimport AddBookList from \"../Screens/AddBookList\";\r\nimport Login from \"../Screens/Login\";\r\nimport SignUp from \"../Screens/SignUp\";\r\nimport AddGoogleUserInfo from \"../Screens/AddGoogleUserInfo\";\r\nimport Search from \"../Screens/Search\";\r\n\r\nimport Header from \"./Header\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nexport default () => {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <Wrapper>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/search\" component={Search} />\r\n          <Route path=\"/books\" exact component={Books} />\r\n          <Route path=\"/login\" exact component={Login} />\r\n          <Route path=\"/singup\" exact component={SignUp} />\r\n          <Route path=\"/shelf\" component={Shelf} />\r\n          <Route path=\"/:userEmail/shelf\" component={UserShelf} />\r\n          <Route path=\"/booklist/:id\" component={BooklistDetail} />\r\n          <Route path=\"/:userEmail/addbooklist\" component={AddBookList} />\r\n          <Route path=\"/:userEmail/profile\" component={Profile} />\r\n          <Route path=\"/:userEmail/editprofile\" component={EditProfile} />\r\n          <Route path=\"/addbook\" component={AddBook} />\r\n          <Route path=\"/book/:id\" component={BookDetail} />\r\n          <Route paht=\"/addtionalInfo\" component={AddGoogleUserInfo} />\r\n          <Redirect from=\"*\" to=\"/\" />\r\n        </Switch>\r\n      </Wrapper>\r\n    </Router>\r\n  );\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\nimport './Font.css';\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing: border-box;\r\n\r\n    }\r\n    body{\r\n        //font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:14px;\r\n        background-color: #FFF;\r\n        line-height: 1.33;\r\n        \r\n    }\r\n    button{\r\n        all:unset;\r\n        cursor:pointer\r\n    }\r\n    .Container{        \r\n        border: 2px solid red;\r\n        display: flex;\r\n        justify-content: center;\r\n        font-size: 3rem;\r\n        color: black;\r\n        margin-left: 200px;\r\n    }\r\n\r\n    h1 {\r\n        font-size: 30px;\r\n        color:#000;\r\n        font-weight:600;\r\n        margin:15px 0 10px;\r\n    }\r\n    \r\n`;\r\n\r\nexport default globalStyles;\r\n","import React from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nimport GoogleAuthProvider from \"./AuthG\";\n\nconst App = () => {\n  return (\n    <GoogleAuthProvider>\n      <Router />\n      <GlobalStyles />\n    </GoogleAuthProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}